yyparse result =        0
Symbol table level 1
 94867585232976     complex  TYPE   typ 94867585232688  lvl  1  siz    16  off     0
(RECORD (re real)
        (im real))
 94867585233840         red  CONST  typ INTEGER  val  0
 94867585234000       white  CONST  typ INTEGER  val  1
 94867585234160        blue  CONST  typ INTEGER  val  2
 94867585234352       color  TYPE   typ 94867585234256  lvl  1  siz     4  off     0
  0 ..   2
 94867585234768      person  TYPE   typ 94867585236592  lvl  1  siz    48  off     0
(RECORD (age integer)
        (friend (^ person))
        (location (RECORD (re real)
                          (im real)))
        (favorite   0 ..   2)
        (salary real))
 94867585234960          pp  TYPE   typ 94867585234864  lvl  1  siz     8  off     0
(^ person)
 94867585237552        john  VAR    4 typ 94867585234864  lvl  1  siz     8  off     0
(^ person)
 94867585237904         sum  VAR    0 typ integer  lvl  1  siz     4  off     8
(program graph1 (progn output)
                (progn (:= sum (aref (^ john)
                                     0))
                       (:= sum (aref (^ john)
                                     0))
                       (:= sum (aref (^ john)
                                     0))
                       (:= sum (aref (^ john)
                                     0))
                       (:= sum (aref (^ john)
                                     0))
                       (:= sum (aref (^ john)
                                     0))))# ---------------- Beginning of Generated Code --------------------
        .file   "foo"
        .text
        .globl graph1
        .type   graph1, @function
graph1:
.LFB0:
	.cfi_startproc
	pushq	%rbp              # save base pointer on stack
	.cfi_def_cfa_offset 16
	movq	%rsp, %rbp        # move stack pointer to base pointer
	.cfi_offset 6, -16
	.cfi_def_cfa_register 6
        subq	$32, %rsp 	  # make space for this stack frame
	movq	%rbx, %r9        # save %rbx (callee-saved) in %r9
# ------------------------- begin Your code -----------------------------
	movl	$0,%eax         	#  0 -> %eax
	cltq	                  	#  sign-extend
	movl	%r8,-24(%rbp)     	#  %r8 -> sum
	movl	$0,%eax         	#  0 -> %eax
	cltq	                  	#  sign-extend
	movl	%r8,-24(%rbp)     	#  %r8 -> sum
	movl	$0,%eax         	#  0 -> %eax
	cltq	                  	#  sign-extend
	movl	%r8,-24(%rbp)     	#  %r8 -> sum
	movl	$0,%eax         	#  0 -> %eax
	cltq	                  	#  sign-extend
	movl	%r8,-24(%rbp)     	#  %r8 -> sum
	movl	$0,%eax         	#  0 -> %eax
	cltq	                  	#  sign-extend
	movl	%r8,-24(%rbp)     	#  %r8 -> sum
	movl	$0,%eax         	#  0 -> %eax
	cltq	                  	#  sign-extend
	movl	%r8,-24(%rbp)     	#  %r8 -> sum
# ----------------------- begin Epilogue code ---------------------------
	movq	%r9, %rbx        # restore %rbx (callee-saved) from %r9
        leave
        ret
        .cfi_endproc
.LFE0:
        .size   graph1, .-graph1
# ----------------- end Epilogue; Literal data follows ------------------
        .section        .rodata

        .ident  "CS 375 Compiler - Spring 2024"
