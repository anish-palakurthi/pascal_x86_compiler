yyparse result =        0
Symbol table level 1
 94693500231280           i  VAR    0 typ integer  lvl  1  siz     4  off     0
 94693500231376         sum  VAR    0 typ integer  lvl  1  siz     4  off     4
(program graph1 (progn output)
                (progn (:= i (+ i 1))
                       (:= sum (+ sum 1))
                       (:= i (+ i sum))))# ---------------- Beginning of Generated Code --------------------
        .file   "foo"
        .text
        .globl graph1
        .type   graph1, @function
graph1:
.LFB0:
	.cfi_startproc
	pushq	%rbp              # save base pointer on stack
	.cfi_def_cfa_offset 16
	movq	%rsp, %rbp        # move stack pointer to base pointer
	.cfi_offset 6, -16
	.cfi_def_cfa_register 6
        subq	$32, %rsp 	  # make space for this stack frame
	movq	%rbx, %r9        # save %rbx (callee-saved) in %r9
# ------------------------- begin Your code -----------------------------
code:   (+ i 1)
code:   i
i: 0
	movl	-32(%rbp),%eax     	#  i -> %eax
code:   1
i: 16
	movl	$1,%xmm0         	#  1 -> %xmm0
	addsd	%xmm0,%eax         	#  %eax + %xmm0 -> %eax
	movl	%eax,-32(%rbp)     	#  %eax -> i
code:   (+ sum 1)
code:   sum
i: 0
	movl	-28(%rbp),%eax     	#  sum -> %eax
code:   1
i: 16
	movl	$1,%xmm0         	#  1 -> %xmm0
	addsd	%xmm0,%eax         	#  %eax + %xmm0 -> %eax
	movl	%eax,-28(%rbp)     	#  %eax -> sum
code:   (+ i sum)
code:   i
i: 0
	movl	-32(%rbp),%eax     	#  i -> %eax
code:   sum
i: 0
	movl	-28(%rbp),%eax     	#  sum -> %eax
i: 16
	addsd	%eax,%xmm0         	#  %xmm0 + %eax -> %xmm0
i: 16
	movsd	%xmm0,-32(%rbp)     	#  %xmm0 -> i
# ----------------------- begin Epilogue code ---------------------------
	movq	%r9, %rbx        # restore %rbx (callee-saved) from %r9
        leave
        ret
        .cfi_endproc
.LFE0:
        .size   graph1, .-graph1
# ----------------- end Epilogue; Literal data follows ------------------
        .section        .rodata

        .ident  "CS 375 Compiler - Spring 2024"
