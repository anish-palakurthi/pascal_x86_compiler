// Generated by GNU Bison 3.5.1.
// Report bugs to <bug-bison@gnu.org>.
// Home page: <https://www.gnu.org/software/bison/>.

digraph "parse.y"
{
  node [fontname = courier, shape = box, colorscheme = paired6]
  edge [fontname = courier]

  0 [label="State 0\n\l  0 $accept: . program $end\l"]
  0 -> 1 [style=solid label="PROGRAM"]
  0 -> 2 [style=dashed label="program"]
  1 [label="State 1\n\l  1 program: PROGRAM . IDENTIFIER LPAREN idlist RPAREN SEMICOLON lblock DOT\l"]
  1 -> 3 [style=solid label="IDENTIFIER"]
  2 [label="State 2\n\l  0 $accept: program . $end\l"]
  2 -> 4 [style=solid label="$end"]
  3 [label="State 3\n\l  1 program: PROGRAM IDENTIFIER . LPAREN idlist RPAREN SEMICOLON lblock DOT\l"]
  3 -> 5 [style=solid label="LPAREN"]
  4 [label="State 4\n\l  0 $accept: program $end .\l"]
  4 -> "4R0" [style=solid]
 "4R0" [label="Acc", fillcolor=1, shape=diamond, style=filled]
  5 [label="State 5\n\l  1 program: PROGRAM IDENTIFIER LPAREN . idlist RPAREN SEMICOLON lblock DOT\l"]
  5 -> 6 [style=solid label="IDENTIFIER"]
  5 -> 7 [style=dashed label="idlist"]
  6 [label="State 6\n\l 12 idlist: IDENTIFIER . COMMA idlist\l 13       | IDENTIFIER .\l"]
  6 -> 8 [style=solid label="COMMA"]
  6 -> "6R13" [style=solid]
 "6R13" [label="R13", fillcolor=3, shape=diamond, style=filled]
  7 [label="State 7\n\l  1 program: PROGRAM IDENTIFIER LPAREN idlist . RPAREN SEMICOLON lblock DOT\l"]
  7 -> 9 [style=solid label="RPAREN"]
  8 [label="State 8\n\l 12 idlist: IDENTIFIER COMMA . idlist\l"]
  8 -> 6 [style=solid label="IDENTIFIER"]
  8 -> 10 [style=dashed label="idlist"]
  9 [label="State 9\n\l  1 program: PROGRAM IDENTIFIER LPAREN idlist RPAREN . SEMICOLON lblock DOT\l"]
  9 -> 11 [style=solid label="SEMICOLON"]
  10 [label="State 10\n\l 12 idlist: IDENTIFIER COMMA idlist .\l"]
  10 -> "10R12" [style=solid]
 "10R12" [label="R12", fillcolor=3, shape=diamond, style=filled]
  11 [label="State 11\n\l  1 program: PROGRAM IDENTIFIER LPAREN idlist RPAREN SEMICOLON . lblock DOT\l"]
  11 -> 12 [style=solid label="BEGINBEGIN"]
  11 -> 13 [style=solid label="CONST"]
  11 -> 14 [style=solid label="LABEL"]
  11 -> 15 [style=solid label="TYPE"]
  11 -> 16 [style=solid label="VAR"]
  11 -> 17 [style=dashed label="lblock"]
  11 -> 18 [style=dashed label="cblock"]
  11 -> 19 [style=dashed label="tblock"]
  11 -> 20 [style=dashed label="vblock"]
  11 -> 21 [style=dashed label="block"]
  12 [label="State 12\n\l 48 block: BEGINBEGIN . statement endpart\l"]
  12 -> 22 [style=solid label="IDENTIFIER"]
  12 -> 23 [style=solid label="NUMBER"]
  12 -> 24 [style=solid label="BEGINBEGIN"]
  12 -> 25 [style=solid label="FOR"]
  12 -> 26 [style=solid label="GOTO"]
  12 -> 27 [style=solid label="IF"]
  12 -> 28 [style=solid label="REPEAT"]
  12 -> 29 [style=solid label="WHILE"]
  12 -> 30 [style=dashed label="label"]
  12 -> 31 [style=dashed label="statement"]
  12 -> 32 [style=dashed label="funcall"]
  12 -> 33 [style=dashed label="assignment"]
  12 -> 34 [style=dashed label="variable"]
  13 [label="State 13\n\l 30 cblock: CONST . clist tblock\l"]
  13 -> 35 [style=solid label="IDENTIFIER"]
  13 -> 36 [style=dashed label="cdef"]
  13 -> 37 [style=dashed label="clist"]
  14 [label="State 14\n\l 28 lblock: LABEL . numlist SEMICOLON cblock\l"]
  14 -> 38 [style=solid label="NUMBER"]
  14 -> 39 [style=dashed label="numlist"]
  15 [label="State 15\n\l 32 tblock: TYPE . tlist vblock\l"]
  15 -> 40 [style=solid label="IDENTIFIER"]
  15 -> 41 [style=dashed label="tdef"]
  15 -> 42 [style=dashed label="tlist"]
  16 [label="State 16\n\l 34 vblock: VAR . varspecs block\l"]
  16 -> 6 [style=solid label="IDENTIFIER"]
  16 -> 43 [style=dashed label="idlist"]
  16 -> 44 [style=dashed label="varspecs"]
  16 -> 45 [style=dashed label="vargroup"]
  17 [label="State 17\n\l  1 program: PROGRAM IDENTIFIER LPAREN idlist RPAREN SEMICOLON lblock . DOT\l"]
  17 -> 46 [style=solid label="DOT"]
  18 [label="State 18\n\l 29 lblock: cblock .\l"]
  18 -> "18R29" [style=solid]
 "18R29" [label="R29", fillcolor=3, shape=diamond, style=filled]
  19 [label="State 19\n\l 31 cblock: tblock .\l"]
  19 -> "19R31" [style=solid]
 "19R31" [label="R31", fillcolor=3, shape=diamond, style=filled]
  20 [label="State 20\n\l 33 tblock: vblock .\l"]
  20 -> "20R33" [style=solid]
 "20R33" [label="R33", fillcolor=3, shape=diamond, style=filled]
  21 [label="State 21\n\l 35 vblock: block .\l"]
  21 -> "21R35" [style=solid]
 "21R35" [label="R35", fillcolor=3, shape=diamond, style=filled]
  22 [label="State 22\n\l 58 funcall: IDENTIFIER . LPAREN expr_list RPAREN\l 64 variable: IDENTIFIER .\l"]
  22 -> 47 [style=solid label="LPAREN"]
  22 -> "22R64" [style=solid]
 "22R64" [label="R64", fillcolor=3, shape=diamond, style=filled]
  23 [label="State 23\n\l 27 label: NUMBER . COLON statement\l"]
  23 -> 48 [style=solid label="COLON"]
  24 [label="State 24\n\l 49 statement: BEGINBEGIN . statement endpart\l"]
  24 -> 22 [style=solid label="IDENTIFIER"]
  24 -> 23 [style=solid label="NUMBER"]
  24 -> 24 [style=solid label="BEGINBEGIN"]
  24 -> 25 [style=solid label="FOR"]
  24 -> 26 [style=solid label="GOTO"]
  24 -> 27 [style=solid label="IF"]
  24 -> 28 [style=solid label="REPEAT"]
  24 -> 29 [style=solid label="WHILE"]
  24 -> 30 [style=dashed label="label"]
  24 -> 49 [style=dashed label="statement"]
  24 -> 32 [style=dashed label="funcall"]
  24 -> 33 [style=dashed label="assignment"]
  24 -> 34 [style=dashed label="variable"]
  25 [label="State 25\n\l 54 statement: FOR . assignment TO expr DO statement\l"]
  25 -> 50 [style=solid label="IDENTIFIER"]
  25 -> 51 [style=dashed label="assignment"]
  25 -> 34 [style=dashed label="variable"]
  26 [label="State 26\n\l 56 statement: GOTO . NUMBER\l"]
  26 -> 52 [style=solid label="NUMBER"]
  27 [label="State 27\n\l 50 statement: IF . expr THEN statement endif\l"]
  27 -> 22 [style=solid label="IDENTIFIER"]
  27 -> 53 [style=solid label="STRING"]
  27 -> 54 [style=solid label="NUMBER"]
  27 -> 55 [style=solid label="PLUS"]
  27 -> 56 [style=solid label="MINUS"]
  27 -> 57 [style=solid label="NOT"]
  27 -> 58 [style=solid label="LPAREN"]
  27 -> 59 [style=solid label="NIL"]
  27 -> 60 [style=dashed label="u_constant"]
  27 -> 61 [style=dashed label="sign"]
  27 -> 62 [style=dashed label="funcall"]
  27 -> 63 [style=dashed label="variable"]
  27 -> 64 [style=dashed label="s_expr"]
  27 -> 65 [style=dashed label="expr"]
  27 -> 66 [style=dashed label="term"]
  27 -> 67 [style=dashed label="factor"]
  28 [label="State 28\n\l 55 statement: REPEAT . s_list UNTIL expr\l"]
  28 -> 22 [style=solid label="IDENTIFIER"]
  28 -> 23 [style=solid label="NUMBER"]
  28 -> 24 [style=solid label="BEGINBEGIN"]
  28 -> 25 [style=solid label="FOR"]
  28 -> 26 [style=solid label="GOTO"]
  28 -> 27 [style=solid label="IF"]
  28 -> 28 [style=solid label="REPEAT"]
  28 -> 29 [style=solid label="WHILE"]
  28 -> 68 [style=dashed label="s_list"]
  28 -> 30 [style=dashed label="label"]
  28 -> 69 [style=dashed label="statement"]
  28 -> 32 [style=dashed label="funcall"]
  28 -> 33 [style=dashed label="assignment"]
  28 -> 34 [style=dashed label="variable"]
  29 [label="State 29\n\l 53 statement: WHILE . expr DO statement\l"]
  29 -> 22 [style=solid label="IDENTIFIER"]
  29 -> 53 [style=solid label="STRING"]
  29 -> 54 [style=solid label="NUMBER"]
  29 -> 55 [style=solid label="PLUS"]
  29 -> 56 [style=solid label="MINUS"]
  29 -> 57 [style=solid label="NOT"]
  29 -> 58 [style=solid label="LPAREN"]
  29 -> 59 [style=solid label="NIL"]
  29 -> 60 [style=dashed label="u_constant"]
  29 -> 61 [style=dashed label="sign"]
  29 -> 62 [style=dashed label="funcall"]
  29 -> 63 [style=dashed label="variable"]
  29 -> 64 [style=dashed label="s_expr"]
  29 -> 70 [style=dashed label="expr"]
  29 -> 66 [style=dashed label="term"]
  29 -> 67 [style=dashed label="factor"]
  30 [label="State 30\n\l 57 statement: label .\l"]
  30 -> "30R57" [style=solid]
 "30R57" [label="R57", fillcolor=3, shape=diamond, style=filled]
  31 [label="State 31\n\l 48 block: BEGINBEGIN statement . endpart\l"]
  31 -> 71 [style=solid label="SEMICOLON"]
  31 -> 72 [style=solid label="END"]
  31 -> 73 [style=dashed label="endpart"]
  32 [label="State 32\n\l 52 statement: funcall .\l"]
  32 -> "32R52" [style=solid]
 "32R52" [label="R52", fillcolor=3, shape=diamond, style=filled]
  33 [label="State 33\n\l 51 statement: assignment .\l"]
  33 -> "33R51" [style=solid]
 "33R51" [label="R51", fillcolor=3, shape=diamond, style=filled]
  34 [label="State 34\n\l 63 assignment: variable . ASSIGN expr\l 65 variable: variable . LBRACKET expr_list RBRACKET\l 66         | variable . POINT\l 67         | variable . DOT IDENTIFIER\l"]
  34 -> 74 [style=solid label="ASSIGN"]
  34 -> 75 [style=solid label="POINT"]
  34 -> 76 [style=solid label="DOT"]
  34 -> 77 [style=solid label="LBRACKET"]
  35 [label="State 35\n\l 16 cdef: IDENTIFIER . EQ constant\l"]
  35 -> 78 [style=solid label="EQ"]
  36 [label="State 36\n\l 17 clist: cdef . SEMICOLON clist\l 18      | cdef . SEMICOLON\l"]
  36 -> 79 [style=solid label="SEMICOLON"]
  37 [label="State 37\n\l 30 cblock: CONST clist . tblock\l"]
  37 -> 12 [style=solid label="BEGINBEGIN"]
  37 -> 15 [style=solid label="TYPE"]
  37 -> 16 [style=solid label="VAR"]
  37 -> 80 [style=dashed label="tblock"]
  37 -> 20 [style=dashed label="vblock"]
  37 -> 21 [style=dashed label="block"]
  38 [label="State 38\n\l 14 numlist: NUMBER . COMMA numlist\l 15        | NUMBER .\l"]
  38 -> 81 [style=solid label="COMMA"]
  38 -> "38R15" [style=solid]
 "38R15" [label="R15", fillcolor=3, shape=diamond, style=filled]
  39 [label="State 39\n\l 28 lblock: LABEL numlist . SEMICOLON cblock\l"]
  39 -> 82 [style=solid label="SEMICOLON"]
  40 [label="State 40\n\l 19 tdef: IDENTIFIER . EQ type\l"]
  40 -> 83 [style=solid label="EQ"]
  41 [label="State 41\n\l 20 tlist: tdef . SEMICOLON tlist\l 21      | tdef . SEMICOLON\l"]
  41 -> 84 [style=solid label="SEMICOLON"]
  42 [label="State 42\n\l 32 tblock: TYPE tlist . vblock\l"]
  42 -> 12 [style=solid label="BEGINBEGIN"]
  42 -> 16 [style=solid label="VAR"]
  42 -> 85 [style=dashed label="vblock"]
  42 -> 21 [style=dashed label="block"]
  43 [label="State 43\n\l 38 vargroup: idlist . COLON type\l"]
  43 -> 86 [style=solid label="COLON"]
  44 [label="State 44\n\l 34 vblock: VAR varspecs . block\l"]
  44 -> 12 [style=solid label="BEGINBEGIN"]
  44 -> 87 [style=dashed label="block"]
  45 [label="State 45\n\l 36 varspecs: vargroup . SEMICOLON varspecs\l 37         | vargroup . SEMICOLON\l"]
  45 -> 88 [style=solid label="SEMICOLON"]
  46 [label="State 46\n\l  1 program: PROGRAM IDENTIFIER LPAREN idlist RPAREN SEMICOLON lblock DOT .\l"]
  46 -> "46R1" [style=solid]
 "46R1" [label="R1", fillcolor=3, shape=diamond, style=filled]
  47 [label="State 47\n\l 58 funcall: IDENTIFIER LPAREN . expr_list RPAREN\l"]
  47 -> 22 [style=solid label="IDENTIFIER"]
  47 -> 53 [style=solid label="STRING"]
  47 -> 54 [style=solid label="NUMBER"]
  47 -> 55 [style=solid label="PLUS"]
  47 -> 56 [style=solid label="MINUS"]
  47 -> 57 [style=solid label="NOT"]
  47 -> 58 [style=solid label="LPAREN"]
  47 -> 59 [style=solid label="NIL"]
  47 -> 60 [style=dashed label="u_constant"]
  47 -> 61 [style=dashed label="sign"]
  47 -> 62 [style=dashed label="funcall"]
  47 -> 63 [style=dashed label="variable"]
  47 -> 64 [style=dashed label="s_expr"]
  47 -> 89 [style=dashed label="expr"]
  47 -> 90 [style=dashed label="expr_list"]
  47 -> 66 [style=dashed label="term"]
  47 -> 67 [style=dashed label="factor"]
  48 [label="State 48\n\l 27 label: NUMBER COLON . statement\l"]
  48 -> 22 [style=solid label="IDENTIFIER"]
  48 -> 23 [style=solid label="NUMBER"]
  48 -> 24 [style=solid label="BEGINBEGIN"]
  48 -> 25 [style=solid label="FOR"]
  48 -> 26 [style=solid label="GOTO"]
  48 -> 27 [style=solid label="IF"]
  48 -> 28 [style=solid label="REPEAT"]
  48 -> 29 [style=solid label="WHILE"]
  48 -> 30 [style=dashed label="label"]
  48 -> 91 [style=dashed label="statement"]
  48 -> 32 [style=dashed label="funcall"]
  48 -> 33 [style=dashed label="assignment"]
  48 -> 34 [style=dashed label="variable"]
  49 [label="State 49\n\l 49 statement: BEGINBEGIN statement . endpart\l"]
  49 -> 71 [style=solid label="SEMICOLON"]
  49 -> 72 [style=solid label="END"]
  49 -> 92 [style=dashed label="endpart"]
  50 [label="State 50\n\l 64 variable: IDENTIFIER .\l"]
  50 -> "50R64" [style=solid]
 "50R64" [label="R64", fillcolor=3, shape=diamond, style=filled]
  51 [label="State 51\n\l 54 statement: FOR assignment . TO expr DO statement\l"]
  51 -> 93 [style=solid label="TO"]
  52 [label="State 52\n\l 56 statement: GOTO NUMBER .\l"]
  52 -> "52R56" [style=solid]
 "52R56" [label="R56", fillcolor=3, shape=diamond, style=filled]
  53 [label="State 53\n\l  4 u_constant: STRING .\l"]
  53 -> "53R4" [style=solid]
 "53R4" [label="R4", fillcolor=3, shape=diamond, style=filled]
  54 [label="State 54\n\l  2 u_constant: NUMBER .\l"]
  54 -> "54R2" [style=solid]
 "54R2" [label="R2", fillcolor=3, shape=diamond, style=filled]
  55 [label="State 55\n\l  5 sign: PLUS .\l"]
  55 -> "55R5" [style=solid]
 "55R5" [label="R5", fillcolor=3, shape=diamond, style=filled]
  56 [label="State 56\n\l  6 sign: MINUS .\l"]
  56 -> "56R6" [style=solid]
 "56R6" [label="R6", fillcolor=3, shape=diamond, style=filled]
  57 [label="State 57\n\l 96 factor: NOT . factor\l"]
  57 -> 22 [style=solid label="IDENTIFIER"]
  57 -> 53 [style=solid label="STRING"]
  57 -> 54 [style=solid label="NUMBER"]
  57 -> 57 [style=solid label="NOT"]
  57 -> 58 [style=solid label="LPAREN"]
  57 -> 59 [style=solid label="NIL"]
  57 -> 60 [style=dashed label="u_constant"]
  57 -> 62 [style=dashed label="funcall"]
  57 -> 63 [style=dashed label="variable"]
  57 -> 94 [style=dashed label="factor"]
  58 [label="State 58\n\l 94 factor: LPAREN . expr RPAREN\l"]
  58 -> 22 [style=solid label="IDENTIFIER"]
  58 -> 53 [style=solid label="STRING"]
  58 -> 54 [style=solid label="NUMBER"]
  58 -> 55 [style=solid label="PLUS"]
  58 -> 56 [style=solid label="MINUS"]
  58 -> 57 [style=solid label="NOT"]
  58 -> 58 [style=solid label="LPAREN"]
  58 -> 59 [style=solid label="NIL"]
  58 -> 60 [style=dashed label="u_constant"]
  58 -> 61 [style=dashed label="sign"]
  58 -> 62 [style=dashed label="funcall"]
  58 -> 63 [style=dashed label="variable"]
  58 -> 64 [style=dashed label="s_expr"]
  58 -> 95 [style=dashed label="expr"]
  58 -> 66 [style=dashed label="term"]
  58 -> 67 [style=dashed label="factor"]
  59 [label="State 59\n\l  3 u_constant: NIL .\l"]
  59 -> "59R3" [style=solid]
 "59R3" [label="R3", fillcolor=3, shape=diamond, style=filled]
  60 [label="State 60\n\l 92 factor: u_constant .\l"]
  60 -> "60R92" [style=solid]
 "60R92" [label="R92", fillcolor=3, shape=diamond, style=filled]
  61 [label="State 61\n\l 83 s_expr: sign . term\l"]
  61 -> 22 [style=solid label="IDENTIFIER"]
  61 -> 53 [style=solid label="STRING"]
  61 -> 54 [style=solid label="NUMBER"]
  61 -> 57 [style=solid label="NOT"]
  61 -> 58 [style=solid label="LPAREN"]
  61 -> 59 [style=solid label="NIL"]
  61 -> 60 [style=dashed label="u_constant"]
  61 -> 62 [style=dashed label="funcall"]
  61 -> 63 [style=dashed label="variable"]
  61 -> 96 [style=dashed label="term"]
  61 -> 67 [style=dashed label="factor"]
  62 [label="State 62\n\l 95 factor: funcall .\l"]
  62 -> "62R95" [style=solid]
 "62R95" [label="R95", fillcolor=3, shape=diamond, style=filled]
  63 [label="State 63\n\l 65 variable: variable . LBRACKET expr_list RBRACKET\l 66         | variable . POINT\l 67         | variable . DOT IDENTIFIER\l 93 factor: variable .\l"]
  63 -> 75 [style=solid label="POINT"]
  63 -> 76 [style=solid label="DOT"]
  63 -> 77 [style=solid label="LBRACKET"]
  63 -> "63R93" [style=solid]
 "63R93" [label="R93", fillcolor=3, shape=diamond, style=filled]
  64 [label="State 64\n\l 85 s_expr: s_expr . plus_op term\l 87 expr: s_expr .\l"]
  64 -> 97 [style=solid label="PLUS"]
  64 -> 98 [style=solid label="MINUS"]
  64 -> 99 [style=solid label="OR"]
  64 -> 100 [style=dashed label="plus_op"]
  64 -> "64R87" [style=solid]
 "64R87" [label="R87", fillcolor=3, shape=diamond, style=filled]
  65 [label="State 65\n\l 50 statement: IF expr . THEN statement endif\l 86 expr: expr . compare_op s_expr\l"]
  65 -> 101 [style=solid label="EQ"]
  65 -> 102 [style=solid label="NE"]
  65 -> 103 [style=solid label="LT"]
  65 -> 104 [style=solid label="LE"]
  65 -> 105 [style=solid label="GE"]
  65 -> 106 [style=solid label="GT"]
  65 -> 107 [style=solid label="IN"]
  65 -> 108 [style=solid label="THEN"]
  65 -> 109 [style=dashed label="compare_op"]
  66 [label="State 66\n\l 84 s_expr: term .\l 90 term: term . times_op factor\l"]
  66 -> 110 [style=solid label="TIMES"]
  66 -> 111 [style=solid label="DIVIDE"]
  66 -> 112 [style=solid label="AND"]
  66 -> 113 [style=solid label="DIV"]
  66 -> 114 [style=solid label="MOD"]
  66 -> 115 [style=dashed label="times_op"]
  66 -> "66R84" [style=solid]
 "66R84" [label="R84", fillcolor=3, shape=diamond, style=filled]
  67 [label="State 67\n\l 91 term: factor .\l"]
  67 -> "67R91" [style=solid]
 "67R91" [label="R91", fillcolor=3, shape=diamond, style=filled]
  68 [label="State 68\n\l 55 statement: REPEAT s_list . UNTIL expr\l"]
  68 -> 116 [style=solid label="UNTIL"]
  69 [label="State 69\n\l 22 s_list: statement . SEMICOLON s_list\l 23       | statement .\l"]
  69 -> 117 [style=solid label="SEMICOLON"]
  69 -> "69R23" [style=solid]
 "69R23" [label="R23", fillcolor=3, shape=diamond, style=filled]
  70 [label="State 70\n\l 53 statement: WHILE expr . DO statement\l 86 expr: expr . compare_op s_expr\l"]
  70 -> 101 [style=solid label="EQ"]
  70 -> 102 [style=solid label="NE"]
  70 -> 103 [style=solid label="LT"]
  70 -> 104 [style=solid label="LE"]
  70 -> 105 [style=solid label="GE"]
  70 -> 106 [style=solid label="GT"]
  70 -> 107 [style=solid label="IN"]
  70 -> 118 [style=solid label="DO"]
  70 -> 109 [style=dashed label="compare_op"]
  71 [label="State 71\n\l 59 endpart: SEMICOLON . statement endpart\l"]
  71 -> 22 [style=solid label="IDENTIFIER"]
  71 -> 23 [style=solid label="NUMBER"]
  71 -> 24 [style=solid label="BEGINBEGIN"]
  71 -> 25 [style=solid label="FOR"]
  71 -> 26 [style=solid label="GOTO"]
  71 -> 27 [style=solid label="IF"]
  71 -> 28 [style=solid label="REPEAT"]
  71 -> 29 [style=solid label="WHILE"]
  71 -> 30 [style=dashed label="label"]
  71 -> 119 [style=dashed label="statement"]
  71 -> 32 [style=dashed label="funcall"]
  71 -> 33 [style=dashed label="assignment"]
  71 -> 34 [style=dashed label="variable"]
  72 [label="State 72\n\l 60 endpart: END .\l"]
  72 -> "72R60" [style=solid]
 "72R60" [label="R60", fillcolor=3, shape=diamond, style=filled]
  73 [label="State 73\n\l 48 block: BEGINBEGIN statement endpart .\l"]
  73 -> "73R48" [style=solid]
 "73R48" [label="R48", fillcolor=3, shape=diamond, style=filled]
  74 [label="State 74\n\l 63 assignment: variable ASSIGN . expr\l"]
  74 -> 22 [style=solid label="IDENTIFIER"]
  74 -> 53 [style=solid label="STRING"]
  74 -> 54 [style=solid label="NUMBER"]
  74 -> 55 [style=solid label="PLUS"]
  74 -> 56 [style=solid label="MINUS"]
  74 -> 57 [style=solid label="NOT"]
  74 -> 58 [style=solid label="LPAREN"]
  74 -> 59 [style=solid label="NIL"]
  74 -> 60 [style=dashed label="u_constant"]
  74 -> 61 [style=dashed label="sign"]
  74 -> 62 [style=dashed label="funcall"]
  74 -> 63 [style=dashed label="variable"]
  74 -> 64 [style=dashed label="s_expr"]
  74 -> 120 [style=dashed label="expr"]
  74 -> 66 [style=dashed label="term"]
  74 -> 67 [style=dashed label="factor"]
  75 [label="State 75\n\l 66 variable: variable POINT .\l"]
  75 -> "75R66" [style=solid]
 "75R66" [label="R66", fillcolor=3, shape=diamond, style=filled]
  76 [label="State 76\n\l 67 variable: variable DOT . IDENTIFIER\l"]
  76 -> 121 [style=solid label="IDENTIFIER"]
  77 [label="State 77\n\l 65 variable: variable LBRACKET . expr_list RBRACKET\l"]
  77 -> 22 [style=solid label="IDENTIFIER"]
  77 -> 53 [style=solid label="STRING"]
  77 -> 54 [style=solid label="NUMBER"]
  77 -> 55 [style=solid label="PLUS"]
  77 -> 56 [style=solid label="MINUS"]
  77 -> 57 [style=solid label="NOT"]
  77 -> 58 [style=solid label="LPAREN"]
  77 -> 59 [style=solid label="NIL"]
  77 -> 60 [style=dashed label="u_constant"]
  77 -> 61 [style=dashed label="sign"]
  77 -> 62 [style=dashed label="funcall"]
  77 -> 63 [style=dashed label="variable"]
  77 -> 64 [style=dashed label="s_expr"]
  77 -> 89 [style=dashed label="expr"]
  77 -> 122 [style=dashed label="expr_list"]
  77 -> 66 [style=dashed label="term"]
  77 -> 67 [style=dashed label="factor"]
  78 [label="State 78\n\l 16 cdef: IDENTIFIER EQ . constant\l"]
  78 -> 123 [style=solid label="IDENTIFIER"]
  78 -> 124 [style=solid label="STRING"]
  78 -> 125 [style=solid label="NUMBER"]
  78 -> 55 [style=solid label="PLUS"]
  78 -> 56 [style=solid label="MINUS"]
  78 -> 126 [style=dashed label="sign"]
  78 -> 127 [style=dashed label="constant"]
  79 [label="State 79\n\l 17 clist: cdef SEMICOLON . clist\l 18      | cdef SEMICOLON .\l"]
  79 -> 35 [style=solid label="IDENTIFIER"]
  79 -> 36 [style=dashed label="cdef"]
  79 -> 128 [style=dashed label="clist"]
  79 -> "79R18" [style=solid]
 "79R18" [label="R18", fillcolor=3, shape=diamond, style=filled]
  80 [label="State 80\n\l 30 cblock: CONST clist tblock .\l"]
  80 -> "80R30" [style=solid]
 "80R30" [label="R30", fillcolor=3, shape=diamond, style=filled]
  81 [label="State 81\n\l 14 numlist: NUMBER COMMA . numlist\l"]
  81 -> 38 [style=solid label="NUMBER"]
  81 -> 129 [style=dashed label="numlist"]
  82 [label="State 82\n\l 28 lblock: LABEL numlist SEMICOLON . cblock\l"]
  82 -> 12 [style=solid label="BEGINBEGIN"]
  82 -> 13 [style=solid label="CONST"]
  82 -> 15 [style=solid label="TYPE"]
  82 -> 16 [style=solid label="VAR"]
  82 -> 130 [style=dashed label="cblock"]
  82 -> 19 [style=dashed label="tblock"]
  82 -> 20 [style=dashed label="vblock"]
  82 -> 21 [style=dashed label="block"]
  83 [label="State 83\n\l 19 tdef: IDENTIFIER EQ . type\l"]
  83 -> 131 [style=solid label="IDENTIFIER"]
  83 -> 124 [style=solid label="STRING"]
  83 -> 125 [style=solid label="NUMBER"]
  83 -> 55 [style=solid label="PLUS"]
  83 -> 56 [style=solid label="MINUS"]
  83 -> 132 [style=solid label="POINT"]
  83 -> 133 [style=solid label="LPAREN"]
  83 -> 134 [style=solid label="ARRAY"]
  83 -> 135 [style=solid label="RECORD"]
  83 -> 126 [style=dashed label="sign"]
  83 -> 136 [style=dashed label="constant"]
  83 -> 137 [style=dashed label="type"]
  83 -> 138 [style=dashed label="simpletype"]
  84 [label="State 84\n\l 20 tlist: tdef SEMICOLON . tlist\l 21      | tdef SEMICOLON .\l"]
  84 -> 40 [style=solid label="IDENTIFIER"]
  84 -> 41 [style=dashed label="tdef"]
  84 -> 139 [style=dashed label="tlist"]
  84 -> "84R21" [style=solid]
 "84R21" [label="R21", fillcolor=3, shape=diamond, style=filled]
  85 [label="State 85\n\l 32 tblock: TYPE tlist vblock .\l"]
  85 -> "85R32" [style=solid]
 "85R32" [label="R32", fillcolor=3, shape=diamond, style=filled]
  86 [label="State 86\n\l 38 vargroup: idlist COLON . type\l"]
  86 -> 131 [style=solid label="IDENTIFIER"]
  86 -> 124 [style=solid label="STRING"]
  86 -> 125 [style=solid label="NUMBER"]
  86 -> 55 [style=solid label="PLUS"]
  86 -> 56 [style=solid label="MINUS"]
  86 -> 132 [style=solid label="POINT"]
  86 -> 133 [style=solid label="LPAREN"]
  86 -> 134 [style=solid label="ARRAY"]
  86 -> 135 [style=solid label="RECORD"]
  86 -> 126 [style=dashed label="sign"]
  86 -> 136 [style=dashed label="constant"]
  86 -> 140 [style=dashed label="type"]
  86 -> 138 [style=dashed label="simpletype"]
  87 [label="State 87\n\l 34 vblock: VAR varspecs block .\l"]
  87 -> "87R34" [style=solid]
 "87R34" [label="R34", fillcolor=3, shape=diamond, style=filled]
  88 [label="State 88\n\l 36 varspecs: vargroup SEMICOLON . varspecs\l 37         | vargroup SEMICOLON .\l"]
  88 -> 6 [style=solid label="IDENTIFIER"]
  88 -> 43 [style=dashed label="idlist"]
  88 -> 141 [style=dashed label="varspecs"]
  88 -> 45 [style=dashed label="vargroup"]
  88 -> "88R37" [style=solid]
 "88R37" [label="R37", fillcolor=3, shape=diamond, style=filled]
  89 [label="State 89\n\l 86 expr: expr . compare_op s_expr\l 88 expr_list: expr . COMMA expr_list\l 89          | expr .\l"]
  89 -> 101 [style=solid label="EQ"]
  89 -> 102 [style=solid label="NE"]
  89 -> 103 [style=solid label="LT"]
  89 -> 104 [style=solid label="LE"]
  89 -> 105 [style=solid label="GE"]
  89 -> 106 [style=solid label="GT"]
  89 -> 107 [style=solid label="IN"]
  89 -> 142 [style=solid label="COMMA"]
  89 -> 109 [style=dashed label="compare_op"]
  89 -> "89R89" [style=solid]
 "89R89" [label="R89", fillcolor=3, shape=diamond, style=filled]
  90 [label="State 90\n\l 58 funcall: IDENTIFIER LPAREN expr_list . RPAREN\l"]
  90 -> 143 [style=solid label="RPAREN"]
  91 [label="State 91\n\l 27 label: NUMBER COLON statement .\l"]
  91 -> "91R27" [style=solid]
 "91R27" [label="R27", fillcolor=3, shape=diamond, style=filled]
  92 [label="State 92\n\l 49 statement: BEGINBEGIN statement endpart .\l"]
  92 -> "92R49" [style=solid]
 "92R49" [label="R49", fillcolor=3, shape=diamond, style=filled]
  93 [label="State 93\n\l 54 statement: FOR assignment TO . expr DO statement\l"]
  93 -> 22 [style=solid label="IDENTIFIER"]
  93 -> 53 [style=solid label="STRING"]
  93 -> 54 [style=solid label="NUMBER"]
  93 -> 55 [style=solid label="PLUS"]
  93 -> 56 [style=solid label="MINUS"]
  93 -> 57 [style=solid label="NOT"]
  93 -> 58 [style=solid label="LPAREN"]
  93 -> 59 [style=solid label="NIL"]
  93 -> 60 [style=dashed label="u_constant"]
  93 -> 61 [style=dashed label="sign"]
  93 -> 62 [style=dashed label="funcall"]
  93 -> 63 [style=dashed label="variable"]
  93 -> 64 [style=dashed label="s_expr"]
  93 -> 144 [style=dashed label="expr"]
  93 -> 66 [style=dashed label="term"]
  93 -> 67 [style=dashed label="factor"]
  94 [label="State 94\n\l 96 factor: NOT factor .\l"]
  94 -> "94R96" [style=solid]
 "94R96" [label="R96", fillcolor=3, shape=diamond, style=filled]
  95 [label="State 95\n\l 86 expr: expr . compare_op s_expr\l 94 factor: LPAREN expr . RPAREN\l"]
  95 -> 101 [style=solid label="EQ"]
  95 -> 102 [style=solid label="NE"]
  95 -> 103 [style=solid label="LT"]
  95 -> 104 [style=solid label="LE"]
  95 -> 105 [style=solid label="GE"]
  95 -> 106 [style=solid label="GT"]
  95 -> 107 [style=solid label="IN"]
  95 -> 145 [style=solid label="RPAREN"]
  95 -> 109 [style=dashed label="compare_op"]
  96 [label="State 96\n\l 83 s_expr: sign term .\l 90 term: term . times_op factor\l"]
  96 -> 110 [style=solid label="TIMES"]
  96 -> 111 [style=solid label="DIVIDE"]
  96 -> 112 [style=solid label="AND"]
  96 -> 113 [style=solid label="DIV"]
  96 -> 114 [style=solid label="MOD"]
  96 -> 115 [style=dashed label="times_op"]
  96 -> "96R83" [style=solid]
 "96R83" [label="R83", fillcolor=3, shape=diamond, style=filled]
  97 [label="State 97\n\l 68 plus_op: PLUS .\l"]
  97 -> "97R68" [style=solid]
 "97R68" [label="R68", fillcolor=3, shape=diamond, style=filled]
  98 [label="State 98\n\l 69 plus_op: MINUS .\l"]
  98 -> "98R69" [style=solid]
 "98R69" [label="R69", fillcolor=3, shape=diamond, style=filled]
  99 [label="State 99\n\l 70 plus_op: OR .\l"]
  99 -> "99R70" [style=solid]
 "99R70" [label="R70", fillcolor=3, shape=diamond, style=filled]
  100 [label="State 100\n\l 85 s_expr: s_expr plus_op . term\l"]
  100 -> 22 [style=solid label="IDENTIFIER"]
  100 -> 53 [style=solid label="STRING"]
  100 -> 54 [style=solid label="NUMBER"]
  100 -> 57 [style=solid label="NOT"]
  100 -> 58 [style=solid label="LPAREN"]
  100 -> 59 [style=solid label="NIL"]
  100 -> 60 [style=dashed label="u_constant"]
  100 -> 62 [style=dashed label="funcall"]
  100 -> 63 [style=dashed label="variable"]
  100 -> 146 [style=dashed label="term"]
  100 -> 67 [style=dashed label="factor"]
  101 [label="State 101\n\l 71 compare_op: EQ .\l"]
  101 -> "101R71" [style=solid]
 "101R71" [label="R71", fillcolor=3, shape=diamond, style=filled]
  102 [label="State 102\n\l 74 compare_op: NE .\l"]
  102 -> "102R74" [style=solid]
 "102R74" [label="R74", fillcolor=3, shape=diamond, style=filled]
  103 [label="State 103\n\l 72 compare_op: LT .\l"]
  103 -> "103R72" [style=solid]
 "103R72" [label="R72", fillcolor=3, shape=diamond, style=filled]
  104 [label="State 104\n\l 75 compare_op: LE .\l"]
  104 -> "104R75" [style=solid]
 "104R75" [label="R75", fillcolor=3, shape=diamond, style=filled]
  105 [label="State 105\n\l 76 compare_op: GE .\l"]
  105 -> "105R76" [style=solid]
 "105R76" [label="R76", fillcolor=3, shape=diamond, style=filled]
  106 [label="State 106\n\l 73 compare_op: GT .\l"]
  106 -> "106R73" [style=solid]
 "106R73" [label="R73", fillcolor=3, shape=diamond, style=filled]
  107 [label="State 107\n\l 77 compare_op: IN .\l"]
  107 -> "107R77" [style=solid]
 "107R77" [label="R77", fillcolor=3, shape=diamond, style=filled]
  108 [label="State 108\n\l 50 statement: IF expr THEN . statement endif\l"]
  108 -> 22 [style=solid label="IDENTIFIER"]
  108 -> 23 [style=solid label="NUMBER"]
  108 -> 24 [style=solid label="BEGINBEGIN"]
  108 -> 25 [style=solid label="FOR"]
  108 -> 26 [style=solid label="GOTO"]
  108 -> 27 [style=solid label="IF"]
  108 -> 28 [style=solid label="REPEAT"]
  108 -> 29 [style=solid label="WHILE"]
  108 -> 30 [style=dashed label="label"]
  108 -> 147 [style=dashed label="statement"]
  108 -> 32 [style=dashed label="funcall"]
  108 -> 33 [style=dashed label="assignment"]
  108 -> 34 [style=dashed label="variable"]
  109 [label="State 109\n\l 86 expr: expr compare_op . s_expr\l"]
  109 -> 22 [style=solid label="IDENTIFIER"]
  109 -> 53 [style=solid label="STRING"]
  109 -> 54 [style=solid label="NUMBER"]
  109 -> 55 [style=solid label="PLUS"]
  109 -> 56 [style=solid label="MINUS"]
  109 -> 57 [style=solid label="NOT"]
  109 -> 58 [style=solid label="LPAREN"]
  109 -> 59 [style=solid label="NIL"]
  109 -> 60 [style=dashed label="u_constant"]
  109 -> 61 [style=dashed label="sign"]
  109 -> 62 [style=dashed label="funcall"]
  109 -> 63 [style=dashed label="variable"]
  109 -> 148 [style=dashed label="s_expr"]
  109 -> 66 [style=dashed label="term"]
  109 -> 67 [style=dashed label="factor"]
  110 [label="State 110\n\l 78 times_op: TIMES .\l"]
  110 -> "110R78" [style=solid]
 "110R78" [label="R78", fillcolor=3, shape=diamond, style=filled]
  111 [label="State 111\n\l 79 times_op: DIVIDE .\l"]
  111 -> "111R79" [style=solid]
 "111R79" [label="R79", fillcolor=3, shape=diamond, style=filled]
  112 [label="State 112\n\l 82 times_op: AND .\l"]
  112 -> "112R82" [style=solid]
 "112R82" [label="R82", fillcolor=3, shape=diamond, style=filled]
  113 [label="State 113\n\l 80 times_op: DIV .\l"]
  113 -> "113R80" [style=solid]
 "113R80" [label="R80", fillcolor=3, shape=diamond, style=filled]
  114 [label="State 114\n\l 81 times_op: MOD .\l"]
  114 -> "114R81" [style=solid]
 "114R81" [label="R81", fillcolor=3, shape=diamond, style=filled]
  115 [label="State 115\n\l 90 term: term times_op . factor\l"]
  115 -> 22 [style=solid label="IDENTIFIER"]
  115 -> 53 [style=solid label="STRING"]
  115 -> 54 [style=solid label="NUMBER"]
  115 -> 57 [style=solid label="NOT"]
  115 -> 58 [style=solid label="LPAREN"]
  115 -> 59 [style=solid label="NIL"]
  115 -> 60 [style=dashed label="u_constant"]
  115 -> 62 [style=dashed label="funcall"]
  115 -> 63 [style=dashed label="variable"]
  115 -> 149 [style=dashed label="factor"]
  116 [label="State 116\n\l 55 statement: REPEAT s_list UNTIL . expr\l"]
  116 -> 22 [style=solid label="IDENTIFIER"]
  116 -> 53 [style=solid label="STRING"]
  116 -> 54 [style=solid label="NUMBER"]
  116 -> 55 [style=solid label="PLUS"]
  116 -> 56 [style=solid label="MINUS"]
  116 -> 57 [style=solid label="NOT"]
  116 -> 58 [style=solid label="LPAREN"]
  116 -> 59 [style=solid label="NIL"]
  116 -> 60 [style=dashed label="u_constant"]
  116 -> 61 [style=dashed label="sign"]
  116 -> 62 [style=dashed label="funcall"]
  116 -> 63 [style=dashed label="variable"]
  116 -> 64 [style=dashed label="s_expr"]
  116 -> 150 [style=dashed label="expr"]
  116 -> 66 [style=dashed label="term"]
  116 -> 67 [style=dashed label="factor"]
  117 [label="State 117\n\l 22 s_list: statement SEMICOLON . s_list\l"]
  117 -> 22 [style=solid label="IDENTIFIER"]
  117 -> 23 [style=solid label="NUMBER"]
  117 -> 24 [style=solid label="BEGINBEGIN"]
  117 -> 25 [style=solid label="FOR"]
  117 -> 26 [style=solid label="GOTO"]
  117 -> 27 [style=solid label="IF"]
  117 -> 28 [style=solid label="REPEAT"]
  117 -> 29 [style=solid label="WHILE"]
  117 -> 151 [style=dashed label="s_list"]
  117 -> 30 [style=dashed label="label"]
  117 -> 69 [style=dashed label="statement"]
  117 -> 32 [style=dashed label="funcall"]
  117 -> 33 [style=dashed label="assignment"]
  117 -> 34 [style=dashed label="variable"]
  118 [label="State 118\n\l 53 statement: WHILE expr DO . statement\l"]
  118 -> 22 [style=solid label="IDENTIFIER"]
  118 -> 23 [style=solid label="NUMBER"]
  118 -> 24 [style=solid label="BEGINBEGIN"]
  118 -> 25 [style=solid label="FOR"]
  118 -> 26 [style=solid label="GOTO"]
  118 -> 27 [style=solid label="IF"]
  118 -> 28 [style=solid label="REPEAT"]
  118 -> 29 [style=solid label="WHILE"]
  118 -> 30 [style=dashed label="label"]
  118 -> 152 [style=dashed label="statement"]
  118 -> 32 [style=dashed label="funcall"]
  118 -> 33 [style=dashed label="assignment"]
  118 -> 34 [style=dashed label="variable"]
  119 [label="State 119\n\l 59 endpart: SEMICOLON statement . endpart\l"]
  119 -> 71 [style=solid label="SEMICOLON"]
  119 -> 72 [style=solid label="END"]
  119 -> 153 [style=dashed label="endpart"]
  120 [label="State 120\n\l 63 assignment: variable ASSIGN expr .\l 86 expr: expr . compare_op s_expr\l"]
  120 -> 101 [style=solid label="EQ"]
  120 -> 102 [style=solid label="NE"]
  120 -> 103 [style=solid label="LT"]
  120 -> 104 [style=solid label="LE"]
  120 -> 105 [style=solid label="GE"]
  120 -> 106 [style=solid label="GT"]
  120 -> 107 [style=solid label="IN"]
  120 -> 109 [style=dashed label="compare_op"]
  120 -> "120R63" [style=solid]
 "120R63" [label="R63", fillcolor=3, shape=diamond, style=filled]
  121 [label="State 121\n\l 67 variable: variable DOT IDENTIFIER .\l"]
  121 -> "121R67" [style=solid]
 "121R67" [label="R67", fillcolor=3, shape=diamond, style=filled]
  122 [label="State 122\n\l 65 variable: variable LBRACKET expr_list . RBRACKET\l"]
  122 -> 154 [style=solid label="RBRACKET"]
  123 [label="State 123\n\l  8 constant: IDENTIFIER .\l"]
  123 -> "123R8" [style=solid]
 "123R8" [label="R8", fillcolor=3, shape=diamond, style=filled]
  124 [label="State 124\n\l 11 constant: STRING .\l"]
  124 -> "124R11" [style=solid]
 "124R11" [label="R11", fillcolor=3, shape=diamond, style=filled]
  125 [label="State 125\n\l 10 constant: NUMBER .\l"]
  125 -> "125R10" [style=solid]
 "125R10" [label="R10", fillcolor=3, shape=diamond, style=filled]
  126 [label="State 126\n\l  7 constant: sign . IDENTIFIER\l  9         | sign . NUMBER\l"]
  126 -> 155 [style=solid label="IDENTIFIER"]
  126 -> 156 [style=solid label="NUMBER"]
  127 [label="State 127\n\l 16 cdef: IDENTIFIER EQ constant .\l"]
  127 -> "127R16" [style=solid]
 "127R16" [label="R16", fillcolor=3, shape=diamond, style=filled]
  128 [label="State 128\n\l 17 clist: cdef SEMICOLON clist .\l"]
  128 -> "128R17" [style=solid]
 "128R17" [label="R17", fillcolor=3, shape=diamond, style=filled]
  129 [label="State 129\n\l 14 numlist: NUMBER COMMA numlist .\l"]
  129 -> "129R14" [style=solid]
 "129R14" [label="R14", fillcolor=3, shape=diamond, style=filled]
  130 [label="State 130\n\l 28 lblock: LABEL numlist SEMICOLON cblock .\l"]
  130 -> "130R28" [style=solid]
 "130R28" [label="R28", fillcolor=3, shape=diamond, style=filled]
  131 [label="State 131\n\l  8 constant: IDENTIFIER .\l 45 simpletype: IDENTIFIER .\l"]
  131 -> "131R8" [label="[DOTDOT]", style=solid]
 "131R8" [label="R8", fillcolor=3, shape=diamond, style=filled]
  131 -> "131R45" [style=solid]
 "131R45" [label="R45", fillcolor=3, shape=diamond, style=filled]
  132 [label="State 132\n\l 42 type: POINT . IDENTIFIER\l"]
  132 -> 157 [style=solid label="IDENTIFIER"]
  133 [label="State 133\n\l 46 simpletype: LPAREN . idlist RPAREN\l"]
  133 -> 6 [style=solid label="IDENTIFIER"]
  133 -> 158 [style=dashed label="idlist"]
  134 [label="State 134\n\l 40 type: ARRAY . LBRACKET stype_list RBRACKET OF type\l"]
  134 -> 159 [style=solid label="LBRACKET"]
  135 [label="State 135\n\l 41 type: RECORD . field_list END\l"]
  135 -> 6 [style=solid label="IDENTIFIER"]
  135 -> 160 [style=dashed label="idlist"]
  135 -> 161 [style=dashed label="fields"]
  135 -> 162 [style=dashed label="field_list"]
  136 [label="State 136\n\l 47 simpletype: constant . DOTDOT constant\l"]
  136 -> 163 [style=solid label="DOTDOT"]
  137 [label="State 137\n\l 19 tdef: IDENTIFIER EQ type .\l"]
  137 -> "137R19" [style=solid]
 "137R19" [label="R19", fillcolor=3, shape=diamond, style=filled]
  138 [label="State 138\n\l 39 type: simpletype .\l"]
  138 -> "138R39" [style=solid]
 "138R39" [label="R39", fillcolor=3, shape=diamond, style=filled]
  139 [label="State 139\n\l 20 tlist: tdef SEMICOLON tlist .\l"]
  139 -> "139R20" [style=solid]
 "139R20" [label="R20", fillcolor=3, shape=diamond, style=filled]
  140 [label="State 140\n\l 38 vargroup: idlist COLON type .\l"]
  140 -> "140R38" [style=solid]
 "140R38" [label="R38", fillcolor=3, shape=diamond, style=filled]
  141 [label="State 141\n\l 36 varspecs: vargroup SEMICOLON varspecs .\l"]
  141 -> "141R36" [style=solid]
 "141R36" [label="R36", fillcolor=3, shape=diamond, style=filled]
  142 [label="State 142\n\l 88 expr_list: expr COMMA . expr_list\l"]
  142 -> 22 [style=solid label="IDENTIFIER"]
  142 -> 53 [style=solid label="STRING"]
  142 -> 54 [style=solid label="NUMBER"]
  142 -> 55 [style=solid label="PLUS"]
  142 -> 56 [style=solid label="MINUS"]
  142 -> 57 [style=solid label="NOT"]
  142 -> 58 [style=solid label="LPAREN"]
  142 -> 59 [style=solid label="NIL"]
  142 -> 60 [style=dashed label="u_constant"]
  142 -> 61 [style=dashed label="sign"]
  142 -> 62 [style=dashed label="funcall"]
  142 -> 63 [style=dashed label="variable"]
  142 -> 64 [style=dashed label="s_expr"]
  142 -> 89 [style=dashed label="expr"]
  142 -> 164 [style=dashed label="expr_list"]
  142 -> 66 [style=dashed label="term"]
  142 -> 67 [style=dashed label="factor"]
  143 [label="State 143\n\l 58 funcall: IDENTIFIER LPAREN expr_list RPAREN .\l"]
  143 -> "143R58" [style=solid]
 "143R58" [label="R58", fillcolor=3, shape=diamond, style=filled]
  144 [label="State 144\n\l 54 statement: FOR assignment TO expr . DO statement\l 86 expr: expr . compare_op s_expr\l"]
  144 -> 101 [style=solid label="EQ"]
  144 -> 102 [style=solid label="NE"]
  144 -> 103 [style=solid label="LT"]
  144 -> 104 [style=solid label="LE"]
  144 -> 105 [style=solid label="GE"]
  144 -> 106 [style=solid label="GT"]
  144 -> 107 [style=solid label="IN"]
  144 -> 165 [style=solid label="DO"]
  144 -> 109 [style=dashed label="compare_op"]
  145 [label="State 145\n\l 94 factor: LPAREN expr RPAREN .\l"]
  145 -> "145R94" [style=solid]
 "145R94" [label="R94", fillcolor=3, shape=diamond, style=filled]
  146 [label="State 146\n\l 85 s_expr: s_expr plus_op term .\l 90 term: term . times_op factor\l"]
  146 -> 110 [style=solid label="TIMES"]
  146 -> 111 [style=solid label="DIVIDE"]
  146 -> 112 [style=solid label="AND"]
  146 -> 113 [style=solid label="DIV"]
  146 -> 114 [style=solid label="MOD"]
  146 -> 115 [style=dashed label="times_op"]
  146 -> "146R85" [style=solid]
 "146R85" [label="R85", fillcolor=3, shape=diamond, style=filled]
  147 [label="State 147\n\l 50 statement: IF expr THEN statement . endif\l"]
  147 -> 166 [style=solid label="ELSE"]
  147 -> 167 [style=dashed label="endif"]
  147 -> "147R62d" [label="[ELSE]", style=solid]
 "147R62d" [label="R62", fillcolor=5, shape=diamond, style=filled]
  147 -> "147R62" [style=solid]
 "147R62" [label="R62", fillcolor=3, shape=diamond, style=filled]
  148 [label="State 148\n\l 85 s_expr: s_expr . plus_op term\l 86 expr: expr compare_op s_expr .\l"]
  148 -> 97 [style=solid label="PLUS"]
  148 -> 98 [style=solid label="MINUS"]
  148 -> 99 [style=solid label="OR"]
  148 -> 100 [style=dashed label="plus_op"]
  148 -> "148R86" [style=solid]
 "148R86" [label="R86", fillcolor=3, shape=diamond, style=filled]
  149 [label="State 149\n\l 90 term: term times_op factor .\l"]
  149 -> "149R90" [style=solid]
 "149R90" [label="R90", fillcolor=3, shape=diamond, style=filled]
  150 [label="State 150\n\l 55 statement: REPEAT s_list UNTIL expr .\l 86 expr: expr . compare_op s_expr\l"]
  150 -> 101 [style=solid label="EQ"]
  150 -> 102 [style=solid label="NE"]
  150 -> 103 [style=solid label="LT"]
  150 -> 104 [style=solid label="LE"]
  150 -> 105 [style=solid label="GE"]
  150 -> 106 [style=solid label="GT"]
  150 -> 107 [style=solid label="IN"]
  150 -> 109 [style=dashed label="compare_op"]
  150 -> "150R55" [style=solid]
 "150R55" [label="R55", fillcolor=3, shape=diamond, style=filled]
  151 [label="State 151\n\l 22 s_list: statement SEMICOLON s_list .\l"]
  151 -> "151R22" [style=solid]
 "151R22" [label="R22", fillcolor=3, shape=diamond, style=filled]
  152 [label="State 152\n\l 53 statement: WHILE expr DO statement .\l"]
  152 -> "152R53" [style=solid]
 "152R53" [label="R53", fillcolor=3, shape=diamond, style=filled]
  153 [label="State 153\n\l 59 endpart: SEMICOLON statement endpart .\l"]
  153 -> "153R59" [style=solid]
 "153R59" [label="R59", fillcolor=3, shape=diamond, style=filled]
  154 [label="State 154\n\l 65 variable: variable LBRACKET expr_list RBRACKET .\l"]
  154 -> "154R65" [style=solid]
 "154R65" [label="R65", fillcolor=3, shape=diamond, style=filled]
  155 [label="State 155\n\l  7 constant: sign IDENTIFIER .\l"]
  155 -> "155R7" [style=solid]
 "155R7" [label="R7", fillcolor=3, shape=diamond, style=filled]
  156 [label="State 156\n\l  9 constant: sign NUMBER .\l"]
  156 -> "156R9" [style=solid]
 "156R9" [label="R9", fillcolor=3, shape=diamond, style=filled]
  157 [label="State 157\n\l 42 type: POINT IDENTIFIER .\l"]
  157 -> "157R42" [style=solid]
 "157R42" [label="R42", fillcolor=3, shape=diamond, style=filled]
  158 [label="State 158\n\l 46 simpletype: LPAREN idlist . RPAREN\l"]
  158 -> 168 [style=solid label="RPAREN"]
  159 [label="State 159\n\l 40 type: ARRAY LBRACKET . stype_list RBRACKET OF type\l"]
  159 -> 131 [style=solid label="IDENTIFIER"]
  159 -> 124 [style=solid label="STRING"]
  159 -> 125 [style=solid label="NUMBER"]
  159 -> 55 [style=solid label="PLUS"]
  159 -> 56 [style=solid label="MINUS"]
  159 -> 133 [style=solid label="LPAREN"]
  159 -> 126 [style=dashed label="sign"]
  159 -> 136 [style=dashed label="constant"]
  159 -> 169 [style=dashed label="stype_list"]
  159 -> 170 [style=dashed label="simpletype"]
  160 [label="State 160\n\l 24 fields: idlist . COLON type\l"]
  160 -> 171 [style=solid label="COLON"]
  161 [label="State 161\n\l 25 field_list: fields . SEMICOLON field_list\l 26           | fields .\l"]
  161 -> 172 [style=solid label="SEMICOLON"]
  161 -> "161R26" [style=solid]
 "161R26" [label="R26", fillcolor=3, shape=diamond, style=filled]
  162 [label="State 162\n\l 41 type: RECORD field_list . END\l"]
  162 -> 173 [style=solid label="END"]
  163 [label="State 163\n\l 47 simpletype: constant DOTDOT . constant\l"]
  163 -> 123 [style=solid label="IDENTIFIER"]
  163 -> 124 [style=solid label="STRING"]
  163 -> 125 [style=solid label="NUMBER"]
  163 -> 55 [style=solid label="PLUS"]
  163 -> 56 [style=solid label="MINUS"]
  163 -> 126 [style=dashed label="sign"]
  163 -> 174 [style=dashed label="constant"]
  164 [label="State 164\n\l 88 expr_list: expr COMMA expr_list .\l"]
  164 -> "164R88" [style=solid]
 "164R88" [label="R88", fillcolor=3, shape=diamond, style=filled]
  165 [label="State 165\n\l 54 statement: FOR assignment TO expr DO . statement\l"]
  165 -> 22 [style=solid label="IDENTIFIER"]
  165 -> 23 [style=solid label="NUMBER"]
  165 -> 24 [style=solid label="BEGINBEGIN"]
  165 -> 25 [style=solid label="FOR"]
  165 -> 26 [style=solid label="GOTO"]
  165 -> 27 [style=solid label="IF"]
  165 -> 28 [style=solid label="REPEAT"]
  165 -> 29 [style=solid label="WHILE"]
  165 -> 30 [style=dashed label="label"]
  165 -> 175 [style=dashed label="statement"]
  165 -> 32 [style=dashed label="funcall"]
  165 -> 33 [style=dashed label="assignment"]
  165 -> 34 [style=dashed label="variable"]
  166 [label="State 166\n\l 61 endif: ELSE . statement\l"]
  166 -> 22 [style=solid label="IDENTIFIER"]
  166 -> 23 [style=solid label="NUMBER"]
  166 -> 24 [style=solid label="BEGINBEGIN"]
  166 -> 25 [style=solid label="FOR"]
  166 -> 26 [style=solid label="GOTO"]
  166 -> 27 [style=solid label="IF"]
  166 -> 28 [style=solid label="REPEAT"]
  166 -> 29 [style=solid label="WHILE"]
  166 -> 30 [style=dashed label="label"]
  166 -> 176 [style=dashed label="statement"]
  166 -> 32 [style=dashed label="funcall"]
  166 -> 33 [style=dashed label="assignment"]
  166 -> 34 [style=dashed label="variable"]
  167 [label="State 167\n\l 50 statement: IF expr THEN statement endif .\l"]
  167 -> "167R50" [style=solid]
 "167R50" [label="R50", fillcolor=3, shape=diamond, style=filled]
  168 [label="State 168\n\l 46 simpletype: LPAREN idlist RPAREN .\l"]
  168 -> "168R46" [style=solid]
 "168R46" [label="R46", fillcolor=3, shape=diamond, style=filled]
  169 [label="State 169\n\l 40 type: ARRAY LBRACKET stype_list . RBRACKET OF type\l"]
  169 -> 177 [style=solid label="RBRACKET"]
  170 [label="State 170\n\l 43 stype_list: simpletype . COMMA stype_list\l 44           | simpletype .\l"]
  170 -> 178 [style=solid label="COMMA"]
  170 -> "170R44" [style=solid]
 "170R44" [label="R44", fillcolor=3, shape=diamond, style=filled]
  171 [label="State 171\n\l 24 fields: idlist COLON . type\l"]
  171 -> 131 [style=solid label="IDENTIFIER"]
  171 -> 124 [style=solid label="STRING"]
  171 -> 125 [style=solid label="NUMBER"]
  171 -> 55 [style=solid label="PLUS"]
  171 -> 56 [style=solid label="MINUS"]
  171 -> 132 [style=solid label="POINT"]
  171 -> 133 [style=solid label="LPAREN"]
  171 -> 134 [style=solid label="ARRAY"]
  171 -> 135 [style=solid label="RECORD"]
  171 -> 126 [style=dashed label="sign"]
  171 -> 136 [style=dashed label="constant"]
  171 -> 179 [style=dashed label="type"]
  171 -> 138 [style=dashed label="simpletype"]
  172 [label="State 172\n\l 25 field_list: fields SEMICOLON . field_list\l"]
  172 -> 6 [style=solid label="IDENTIFIER"]
  172 -> 160 [style=dashed label="idlist"]
  172 -> 161 [style=dashed label="fields"]
  172 -> 180 [style=dashed label="field_list"]
  173 [label="State 173\n\l 41 type: RECORD field_list END .\l"]
  173 -> "173R41" [style=solid]
 "173R41" [label="R41", fillcolor=3, shape=diamond, style=filled]
  174 [label="State 174\n\l 47 simpletype: constant DOTDOT constant .\l"]
  174 -> "174R47" [style=solid]
 "174R47" [label="R47", fillcolor=3, shape=diamond, style=filled]
  175 [label="State 175\n\l 54 statement: FOR assignment TO expr DO statement .\l"]
  175 -> "175R54" [style=solid]
 "175R54" [label="R54", fillcolor=3, shape=diamond, style=filled]
  176 [label="State 176\n\l 61 endif: ELSE statement .\l"]
  176 -> "176R61" [style=solid]
 "176R61" [label="R61", fillcolor=3, shape=diamond, style=filled]
  177 [label="State 177\n\l 40 type: ARRAY LBRACKET stype_list RBRACKET . OF type\l"]
  177 -> 181 [style=solid label="OF"]
  178 [label="State 178\n\l 43 stype_list: simpletype COMMA . stype_list\l"]
  178 -> 131 [style=solid label="IDENTIFIER"]
  178 -> 124 [style=solid label="STRING"]
  178 -> 125 [style=solid label="NUMBER"]
  178 -> 55 [style=solid label="PLUS"]
  178 -> 56 [style=solid label="MINUS"]
  178 -> 133 [style=solid label="LPAREN"]
  178 -> 126 [style=dashed label="sign"]
  178 -> 136 [style=dashed label="constant"]
  178 -> 182 [style=dashed label="stype_list"]
  178 -> 170 [style=dashed label="simpletype"]
  179 [label="State 179\n\l 24 fields: idlist COLON type .\l"]
  179 -> "179R24" [style=solid]
 "179R24" [label="R24", fillcolor=3, shape=diamond, style=filled]
  180 [label="State 180\n\l 25 field_list: fields SEMICOLON field_list .\l"]
  180 -> "180R25" [style=solid]
 "180R25" [label="R25", fillcolor=3, shape=diamond, style=filled]
  181 [label="State 181\n\l 40 type: ARRAY LBRACKET stype_list RBRACKET OF . type\l"]
  181 -> 131 [style=solid label="IDENTIFIER"]
  181 -> 124 [style=solid label="STRING"]
  181 -> 125 [style=solid label="NUMBER"]
  181 -> 55 [style=solid label="PLUS"]
  181 -> 56 [style=solid label="MINUS"]
  181 -> 132 [style=solid label="POINT"]
  181 -> 133 [style=solid label="LPAREN"]
  181 -> 134 [style=solid label="ARRAY"]
  181 -> 135 [style=solid label="RECORD"]
  181 -> 126 [style=dashed label="sign"]
  181 -> 136 [style=dashed label="constant"]
  181 -> 183 [style=dashed label="type"]
  181 -> 138 [style=dashed label="simpletype"]
  182 [label="State 182\n\l 43 stype_list: simpletype COMMA stype_list .\l"]
  182 -> "182R43" [style=solid]
 "182R43" [label="R43", fillcolor=3, shape=diamond, style=filled]
  183 [label="State 183\n\l 40 type: ARRAY LBRACKET stype_list RBRACKET OF type .\l"]
  183 -> "183R40" [style=solid]
 "183R40" [label="R40", fillcolor=3, shape=diamond, style=filled]
}
