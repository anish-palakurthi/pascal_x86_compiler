// Generated by GNU Bison 3.5.1.
// Report bugs to <bug-bison@gnu.org>.
// Home page: <https://www.gnu.org/software/bison/>.

digraph "parse.y"
{
  node [fontname = courier, shape = box, colorscheme = paired6]
  edge [fontname = courier]

  0 [label="State 0\n\l  0 $accept: . program $end\l"]
  0 -> 1 [style=solid label="PROGRAM"]
  0 -> 2 [style=dashed label="program"]
  1 [label="State 1\n\l  1 program: PROGRAM . IDENTIFIER LPAREN idlist RPAREN SEMICOLON lblock DOT\l"]
  1 -> 3 [style=solid label="IDENTIFIER"]
  2 [label="State 2\n\l  0 $accept: program . $end\l"]
  2 -> 4 [style=solid label="$end"]
  3 [label="State 3\n\l  1 program: PROGRAM IDENTIFIER . LPAREN idlist RPAREN SEMICOLON lblock DOT\l"]
  3 -> 5 [style=solid label="LPAREN"]
  4 [label="State 4\n\l  0 $accept: program $end .\l"]
  4 -> "4R0" [style=solid]
 "4R0" [label="Acc", fillcolor=1, shape=diamond, style=filled]
  5 [label="State 5\n\l  1 program: PROGRAM IDENTIFIER LPAREN . idlist RPAREN SEMICOLON lblock DOT\l"]
  5 -> 6 [style=solid label="IDENTIFIER"]
  5 -> 7 [style=dashed label="idlist"]
  6 [label="State 6\n\l  2 idlist: IDENTIFIER . COMMA idlist\l  3       | IDENTIFIER .\l"]
  6 -> 8 [style=solid label="COMMA"]
  6 -> "6R3" [style=solid]
 "6R3" [label="R3", fillcolor=3, shape=diamond, style=filled]
  7 [label="State 7\n\l  1 program: PROGRAM IDENTIFIER LPAREN idlist . RPAREN SEMICOLON lblock DOT\l"]
  7 -> 9 [style=solid label="RPAREN"]
  8 [label="State 8\n\l  2 idlist: IDENTIFIER COMMA . idlist\l"]
  8 -> 6 [style=solid label="IDENTIFIER"]
  8 -> 10 [style=dashed label="idlist"]
  9 [label="State 9\n\l  1 program: PROGRAM IDENTIFIER LPAREN idlist RPAREN . SEMICOLON lblock DOT\l"]
  9 -> 11 [style=solid label="SEMICOLON"]
  10 [label="State 10\n\l  2 idlist: IDENTIFIER COMMA idlist .\l"]
  10 -> "10R2" [style=solid]
 "10R2" [label="R2", fillcolor=3, shape=diamond, style=filled]
  11 [label="State 11\n\l  1 program: PROGRAM IDENTIFIER LPAREN idlist RPAREN SEMICOLON . lblock DOT\l"]
  11 -> 12 [style=solid label="BEGINBEGIN"]
  11 -> 13 [style=solid label="CONST"]
  11 -> 14 [style=solid label="LABEL"]
  11 -> 15 [style=solid label="TYPE"]
  11 -> 16 [style=solid label="VAR"]
  11 -> 17 [style=dashed label="lblock"]
  11 -> 18 [style=dashed label="cblock"]
  11 -> 19 [style=dashed label="tblock"]
  11 -> 20 [style=dashed label="vblock"]
  11 -> 21 [style=dashed label="block"]
  12 [label="State 12\n\l 43 block: BEGINBEGIN . statement endpart\l"]
  12 -> 22 [style=solid label="IDENTIFIER"]
  12 -> 23 [style=solid label="NUMBER"]
  12 -> 12 [style=solid label="BEGINBEGIN"]
  12 -> 24 [style=solid label="FOR"]
  12 -> 25 [style=solid label="GOTO"]
  12 -> 26 [style=solid label="IF"]
  12 -> 27 [style=solid label="REPEAT"]
  12 -> 28 [style=solid label="WHILE"]
  12 -> 29 [style=dashed label="label"]
  12 -> 30 [style=dashed label="block"]
  12 -> 31 [style=dashed label="statement"]
  12 -> 32 [style=dashed label="functionCall"]
  12 -> 33 [style=dashed label="assignment"]
  12 -> 34 [style=dashed label="variable"]
  13 [label="State 13\n\l 22 cblock: CONST . clist tblock\l"]
  13 -> 35 [style=solid label="IDENTIFIER"]
  13 -> 36 [style=dashed label="cdef"]
  13 -> 37 [style=dashed label="clist"]
  14 [label="State 14\n\l  7 lblock: LABEL . labelsList SEMICOLON cblock\l"]
  14 -> 38 [style=solid label="NUMBER"]
  14 -> 39 [style=dashed label="labelsList"]
  15 [label="State 15\n\l 24 tblock: TYPE . tlist vblock\l"]
  15 -> 40 [style=solid label="IDENTIFIER"]
  15 -> 41 [style=dashed label="tdef"]
  15 -> 42 [style=dashed label="tlist"]
  16 [label="State 16\n\l 26 vblock: VAR . varspecs block\l"]
  16 -> 6 [style=solid label="IDENTIFIER"]
  16 -> 43 [style=dashed label="idlist"]
  16 -> 44 [style=dashed label="varspecs"]
  16 -> 45 [style=dashed label="vargroup"]
  17 [label="State 17\n\l  1 program: PROGRAM IDENTIFIER LPAREN idlist RPAREN SEMICOLON lblock . DOT\l"]
  17 -> 46 [style=solid label="DOT"]
  18 [label="State 18\n\l  8 lblock: cblock .\l"]
  18 -> "18R8" [style=solid]
 "18R8" [label="R8", fillcolor=3, shape=diamond, style=filled]
  19 [label="State 19\n\l 23 cblock: tblock .\l"]
  19 -> "19R23" [style=solid]
 "19R23" [label="R23", fillcolor=3, shape=diamond, style=filled]
  20 [label="State 20\n\l 25 tblock: vblock .\l"]
  20 -> "20R25" [style=solid]
 "20R25" [label="R25", fillcolor=3, shape=diamond, style=filled]
  21 [label="State 21\n\l 27 vblock: block .\l"]
  21 -> "21R27" [style=solid]
 "21R27" [label="R27", fillcolor=3, shape=diamond, style=filled]
  22 [label="State 22\n\l 53 functionCall: IDENTIFIER . LPAREN expressionList RPAREN\l 59 variable: IDENTIFIER .\l"]
  22 -> 47 [style=solid label="LPAREN"]
  22 -> "22R59" [style=solid]
 "22R59" [label="R59", fillcolor=3, shape=diamond, style=filled]
  23 [label="State 23\n\l  6 label: NUMBER . COLON statement\l"]
  23 -> 48 [style=solid label="COLON"]
  24 [label="State 24\n\l 48 statement: FOR . assignment TO expr DO statement\l"]
  24 -> 49 [style=solid label="IDENTIFIER"]
  24 -> 50 [style=dashed label="assignment"]
  24 -> 34 [style=dashed label="variable"]
  25 [label="State 25\n\l 50 statement: GOTO . NUMBER\l"]
  25 -> 51 [style=solid label="NUMBER"]
  26 [label="State 26\n\l 45 statement: IF . expr THEN statement endif\l"]
  26 -> 22 [style=solid label="IDENTIFIER"]
  26 -> 52 [style=solid label="STRING"]
  26 -> 53 [style=solid label="NUMBER"]
  26 -> 54 [style=solid label="PLUS"]
  26 -> 55 [style=solid label="MINUS"]
  26 -> 56 [style=solid label="NOT"]
  26 -> 57 [style=solid label="LPAREN"]
  26 -> 58 [style=solid label="NIL"]
  26 -> 59 [style=dashed label="functionCall"]
  26 -> 60 [style=dashed label="variable"]
  26 -> 61 [style=dashed label="signedExpression"]
  26 -> 62 [style=dashed label="signedTerm"]
  26 -> 63 [style=dashed label="sign"]
  26 -> 64 [style=dashed label="expr"]
  26 -> 65 [style=dashed label="term"]
  26 -> 66 [style=dashed label="factor"]
  27 [label="State 27\n\l 49 statement: REPEAT . statementList UNTIL expr\l"]
  27 -> 22 [style=solid label="IDENTIFIER"]
  27 -> 23 [style=solid label="NUMBER"]
  27 -> 12 [style=solid label="BEGINBEGIN"]
  27 -> 24 [style=solid label="FOR"]
  27 -> 25 [style=solid label="GOTO"]
  27 -> 26 [style=solid label="IF"]
  27 -> 27 [style=solid label="REPEAT"]
  27 -> 28 [style=solid label="WHILE"]
  27 -> 29 [style=dashed label="label"]
  27 -> 67 [style=dashed label="statementList"]
  27 -> 30 [style=dashed label="block"]
  27 -> 68 [style=dashed label="statement"]
  27 -> 32 [style=dashed label="functionCall"]
  27 -> 33 [style=dashed label="assignment"]
  27 -> 34 [style=dashed label="variable"]
  28 [label="State 28\n\l 51 statement: WHILE . expr DO statement\l"]
  28 -> 22 [style=solid label="IDENTIFIER"]
  28 -> 52 [style=solid label="STRING"]
  28 -> 53 [style=solid label="NUMBER"]
  28 -> 54 [style=solid label="PLUS"]
  28 -> 55 [style=solid label="MINUS"]
  28 -> 56 [style=solid label="NOT"]
  28 -> 57 [style=solid label="LPAREN"]
  28 -> 58 [style=solid label="NIL"]
  28 -> 59 [style=dashed label="functionCall"]
  28 -> 60 [style=dashed label="variable"]
  28 -> 61 [style=dashed label="signedExpression"]
  28 -> 62 [style=dashed label="signedTerm"]
  28 -> 63 [style=dashed label="sign"]
  28 -> 69 [style=dashed label="expr"]
  28 -> 65 [style=dashed label="term"]
  28 -> 66 [style=dashed label="factor"]
  29 [label="State 29\n\l 52 statement: label .\l"]
  29 -> "29R52" [style=solid]
 "29R52" [label="R52", fillcolor=3, shape=diamond, style=filled]
  30 [label="State 30\n\l 44 statement: block .\l"]
  30 -> "30R44" [style=solid]
 "30R44" [label="R44", fillcolor=3, shape=diamond, style=filled]
  31 [label="State 31\n\l 43 block: BEGINBEGIN statement . endpart\l"]
  31 -> 70 [style=solid label="SEMICOLON"]
  31 -> 71 [style=solid label="END"]
  31 -> 72 [style=dashed label="endpart"]
  32 [label="State 32\n\l 47 statement: functionCall .\l"]
  32 -> "32R47" [style=solid]
 "32R47" [label="R47", fillcolor=3, shape=diamond, style=filled]
  33 [label="State 33\n\l 46 statement: assignment .\l"]
  33 -> "33R46" [style=solid]
 "33R46" [label="R46", fillcolor=3, shape=diamond, style=filled]
  34 [label="State 34\n\l 58 assignment: variable . ASSIGN expr\l 60 variable: variable . LBRACKET expressionList RBRACKET\l 61         | variable . POINT\l 62         | variable . DOT IDENTIFIER\l"]
  34 -> 73 [style=solid label="ASSIGN"]
  34 -> 74 [style=solid label="POINT"]
  34 -> 75 [style=solid label="DOT"]
  34 -> 76 [style=solid label="LBRACKET"]
  35 [label="State 35\n\l  9 cdef: IDENTIFIER . EQ constant\l"]
  35 -> 77 [style=solid label="EQ"]
  36 [label="State 36\n\l 10 clist: cdef . SEMICOLON clist\l 11      | cdef . SEMICOLON\l"]
  36 -> 78 [style=solid label="SEMICOLON"]
  37 [label="State 37\n\l 22 cblock: CONST clist . tblock\l"]
  37 -> 12 [style=solid label="BEGINBEGIN"]
  37 -> 15 [style=solid label="TYPE"]
  37 -> 16 [style=solid label="VAR"]
  37 -> 79 [style=dashed label="tblock"]
  37 -> 20 [style=dashed label="vblock"]
  37 -> 21 [style=dashed label="block"]
  38 [label="State 38\n\l  4 labelsList: NUMBER . COMMA labelsList\l  5           | NUMBER .\l"]
  38 -> 80 [style=solid label="COMMA"]
  38 -> "38R5" [style=solid]
 "38R5" [label="R5", fillcolor=3, shape=diamond, style=filled]
  39 [label="State 39\n\l  7 lblock: LABEL labelsList . SEMICOLON cblock\l"]
  39 -> 81 [style=solid label="SEMICOLON"]
  40 [label="State 40\n\l 17 tdef: IDENTIFIER . EQ type\l"]
  40 -> 82 [style=solid label="EQ"]
  41 [label="State 41\n\l 18 tlist: tdef . SEMICOLON tlist\l 19      | tdef . SEMICOLON\l"]
  41 -> 83 [style=solid label="SEMICOLON"]
  42 [label="State 42\n\l 24 tblock: TYPE tlist . vblock\l"]
  42 -> 12 [style=solid label="BEGINBEGIN"]
  42 -> 16 [style=solid label="VAR"]
  42 -> 84 [style=dashed label="vblock"]
  42 -> 21 [style=dashed label="block"]
  43 [label="State 43\n\l 30 vargroup: idlist . COLON type\l"]
  43 -> 85 [style=solid label="COLON"]
  44 [label="State 44\n\l 26 vblock: VAR varspecs . block\l"]
  44 -> 12 [style=solid label="BEGINBEGIN"]
  44 -> 86 [style=dashed label="block"]
  45 [label="State 45\n\l 28 varspecs: vargroup . SEMICOLON varspecs\l 29         | vargroup . SEMICOLON\l"]
  45 -> 87 [style=solid label="SEMICOLON"]
  46 [label="State 46\n\l  1 program: PROGRAM IDENTIFIER LPAREN idlist RPAREN SEMICOLON lblock DOT .\l"]
  46 -> "46R1" [style=solid]
 "46R1" [label="R1", fillcolor=3, shape=diamond, style=filled]
  47 [label="State 47\n\l 53 functionCall: IDENTIFIER LPAREN . expressionList RPAREN\l"]
  47 -> 22 [style=solid label="IDENTIFIER"]
  47 -> 52 [style=solid label="STRING"]
  47 -> 53 [style=solid label="NUMBER"]
  47 -> 54 [style=solid label="PLUS"]
  47 -> 55 [style=solid label="MINUS"]
  47 -> 56 [style=solid label="NOT"]
  47 -> 57 [style=solid label="LPAREN"]
  47 -> 58 [style=solid label="NIL"]
  47 -> 59 [style=dashed label="functionCall"]
  47 -> 60 [style=dashed label="variable"]
  47 -> 61 [style=dashed label="signedExpression"]
  47 -> 62 [style=dashed label="signedTerm"]
  47 -> 63 [style=dashed label="sign"]
  47 -> 88 [style=dashed label="expr"]
  47 -> 89 [style=dashed label="expressionList"]
  47 -> 65 [style=dashed label="term"]
  47 -> 66 [style=dashed label="factor"]
  48 [label="State 48\n\l  6 label: NUMBER COLON . statement\l"]
  48 -> 22 [style=solid label="IDENTIFIER"]
  48 -> 23 [style=solid label="NUMBER"]
  48 -> 12 [style=solid label="BEGINBEGIN"]
  48 -> 24 [style=solid label="FOR"]
  48 -> 25 [style=solid label="GOTO"]
  48 -> 26 [style=solid label="IF"]
  48 -> 27 [style=solid label="REPEAT"]
  48 -> 28 [style=solid label="WHILE"]
  48 -> 29 [style=dashed label="label"]
  48 -> 30 [style=dashed label="block"]
  48 -> 90 [style=dashed label="statement"]
  48 -> 32 [style=dashed label="functionCall"]
  48 -> 33 [style=dashed label="assignment"]
  48 -> 34 [style=dashed label="variable"]
  49 [label="State 49\n\l 59 variable: IDENTIFIER .\l"]
  49 -> "49R59" [style=solid]
 "49R59" [label="R59", fillcolor=3, shape=diamond, style=filled]
  50 [label="State 50\n\l 48 statement: FOR assignment . TO expr DO statement\l"]
  50 -> 91 [style=solid label="TO"]
  51 [label="State 51\n\l 50 statement: GOTO NUMBER .\l"]
  51 -> "51R50" [style=solid]
 "51R50" [label="R50", fillcolor=3, shape=diamond, style=filled]
  52 [label="State 52\n\l 88 factor: STRING .\l"]
  52 -> "52R88" [style=solid]
 "52R88" [label="R88", fillcolor=3, shape=diamond, style=filled]
  53 [label="State 53\n\l 89 factor: NUMBER .\l"]
  53 -> "53R89" [style=solid]
 "53R89" [label="R89", fillcolor=3, shape=diamond, style=filled]
  54 [label="State 54\n\l 69 sign: PLUS .\l"]
  54 -> "54R69" [style=solid]
 "54R69" [label="R69", fillcolor=3, shape=diamond, style=filled]
  55 [label="State 55\n\l 70 sign: MINUS .\l"]
  55 -> "55R70" [style=solid]
 "55R70" [label="R70", fillcolor=3, shape=diamond, style=filled]
  56 [label="State 56\n\l 93 factor: NOT . factor\l"]
  56 -> 22 [style=solid label="IDENTIFIER"]
  56 -> 52 [style=solid label="STRING"]
  56 -> 53 [style=solid label="NUMBER"]
  56 -> 56 [style=solid label="NOT"]
  56 -> 57 [style=solid label="LPAREN"]
  56 -> 58 [style=solid label="NIL"]
  56 -> 59 [style=dashed label="functionCall"]
  56 -> 60 [style=dashed label="variable"]
  56 -> 92 [style=dashed label="factor"]
  57 [label="State 57\n\l 92 factor: LPAREN . expr RPAREN\l"]
  57 -> 22 [style=solid label="IDENTIFIER"]
  57 -> 52 [style=solid label="STRING"]
  57 -> 53 [style=solid label="NUMBER"]
  57 -> 54 [style=solid label="PLUS"]
  57 -> 55 [style=solid label="MINUS"]
  57 -> 56 [style=solid label="NOT"]
  57 -> 57 [style=solid label="LPAREN"]
  57 -> 58 [style=solid label="NIL"]
  57 -> 59 [style=dashed label="functionCall"]
  57 -> 60 [style=dashed label="variable"]
  57 -> 61 [style=dashed label="signedExpression"]
  57 -> 62 [style=dashed label="signedTerm"]
  57 -> 63 [style=dashed label="sign"]
  57 -> 93 [style=dashed label="expr"]
  57 -> 65 [style=dashed label="term"]
  57 -> 66 [style=dashed label="factor"]
  58 [label="State 58\n\l 90 factor: NIL .\l"]
  58 -> "58R90" [style=solid]
 "58R90" [label="R90", fillcolor=3, shape=diamond, style=filled]
  59 [label="State 59\n\l 91 factor: functionCall .\l"]
  59 -> "59R91" [style=solid]
 "59R91" [label="R91", fillcolor=3, shape=diamond, style=filled]
  60 [label="State 60\n\l 60 variable: variable . LBRACKET expressionList RBRACKET\l 61         | variable . POINT\l 62         | variable . DOT IDENTIFIER\l 87 factor: variable .\l"]
  60 -> 74 [style=solid label="POINT"]
  60 -> 75 [style=solid label="DOT"]
  60 -> 76 [style=solid label="LBRACKET"]
  60 -> "60R87" [style=solid]
 "60R87" [label="R87", fillcolor=3, shape=diamond, style=filled]
  61 [label="State 61\n\l 64 signedExpression: signedExpression . PLUS term\l 65                 | signedExpression . MINUS term\l 66                 | signedExpression . OR term\l 78 expr: signedExpression .\l"]
  61 -> 94 [style=solid label="PLUS"]
  61 -> 95 [style=solid label="MINUS"]
  61 -> 96 [style=solid label="OR"]
  61 -> "61R78" [style=solid]
 "61R78" [label="R78", fillcolor=3, shape=diamond, style=filled]
  62 [label="State 62\n\l 63 signedExpression: signedTerm .\l"]
  62 -> "62R63" [style=solid]
 "62R63" [label="R63", fillcolor=3, shape=diamond, style=filled]
  63 [label="State 63\n\l 67 signedTerm: sign . term\l"]
  63 -> 22 [style=solid label="IDENTIFIER"]
  63 -> 52 [style=solid label="STRING"]
  63 -> 53 [style=solid label="NUMBER"]
  63 -> 56 [style=solid label="NOT"]
  63 -> 57 [style=solid label="LPAREN"]
  63 -> 58 [style=solid label="NIL"]
  63 -> 59 [style=dashed label="functionCall"]
  63 -> 60 [style=dashed label="variable"]
  63 -> 97 [style=dashed label="term"]
  63 -> 66 [style=dashed label="factor"]
  64 [label="State 64\n\l 45 statement: IF expr . THEN statement endif\l 71 expr: expr . EQ signedExpression\l 72     | expr . LT signedExpression\l 73     | expr . GT signedExpression\l 74     | expr . NE signedExpression\l 75     | expr . LE signedExpression\l 76     | expr . GE signedExpression\l 77     | expr . IN signedExpression\l"]
  64 -> 98 [style=solid label="EQ"]
  64 -> 99 [style=solid label="NE"]
  64 -> 100 [style=solid label="LT"]
  64 -> 101 [style=solid label="LE"]
  64 -> 102 [style=solid label="GE"]
  64 -> 103 [style=solid label="GT"]
  64 -> 104 [style=solid label="IN"]
  64 -> 105 [style=solid label="THEN"]
  65 [label="State 65\n\l 68 signedTerm: term .\l 81 term: term . TIMES factor\l 82     | term . DIVIDE factor\l 83     | term . AND factor\l 84     | term . DIV factor\l 85     | term . MOD factor\l"]
  65 -> 106 [style=solid label="TIMES"]
  65 -> 107 [style=solid label="DIVIDE"]
  65 -> 108 [style=solid label="AND"]
  65 -> 109 [style=solid label="DIV"]
  65 -> 110 [style=solid label="MOD"]
  65 -> "65R68" [style=solid]
 "65R68" [label="R68", fillcolor=3, shape=diamond, style=filled]
  66 [label="State 66\n\l 86 term: factor .\l"]
  66 -> "66R86" [style=solid]
 "66R86" [label="R86", fillcolor=3, shape=diamond, style=filled]
  67 [label="State 67\n\l 49 statement: REPEAT statementList . UNTIL expr\l"]
  67 -> 111 [style=solid label="UNTIL"]
  68 [label="State 68\n\l 20 statementList: statement . SEMICOLON statementList\l 21              | statement .\l"]
  68 -> 112 [style=solid label="SEMICOLON"]
  68 -> "68R21" [style=solid]
 "68R21" [label="R21", fillcolor=3, shape=diamond, style=filled]
  69 [label="State 69\n\l 51 statement: WHILE expr . DO statement\l 71 expr: expr . EQ signedExpression\l 72     | expr . LT signedExpression\l 73     | expr . GT signedExpression\l 74     | expr . NE signedExpression\l 75     | expr . LE signedExpression\l 76     | expr . GE signedExpression\l 77     | expr . IN signedExpression\l"]
  69 -> 98 [style=solid label="EQ"]
  69 -> 99 [style=solid label="NE"]
  69 -> 100 [style=solid label="LT"]
  69 -> 101 [style=solid label="LE"]
  69 -> 102 [style=solid label="GE"]
  69 -> 103 [style=solid label="GT"]
  69 -> 104 [style=solid label="IN"]
  69 -> 113 [style=solid label="DO"]
  70 [label="State 70\n\l 54 endpart: SEMICOLON . statement endpart\l"]
  70 -> 22 [style=solid label="IDENTIFIER"]
  70 -> 23 [style=solid label="NUMBER"]
  70 -> 12 [style=solid label="BEGINBEGIN"]
  70 -> 24 [style=solid label="FOR"]
  70 -> 25 [style=solid label="GOTO"]
  70 -> 26 [style=solid label="IF"]
  70 -> 27 [style=solid label="REPEAT"]
  70 -> 28 [style=solid label="WHILE"]
  70 -> 29 [style=dashed label="label"]
  70 -> 30 [style=dashed label="block"]
  70 -> 114 [style=dashed label="statement"]
  70 -> 32 [style=dashed label="functionCall"]
  70 -> 33 [style=dashed label="assignment"]
  70 -> 34 [style=dashed label="variable"]
  71 [label="State 71\n\l 55 endpart: END .\l"]
  71 -> "71R55" [style=solid]
 "71R55" [label="R55", fillcolor=3, shape=diamond, style=filled]
  72 [label="State 72\n\l 43 block: BEGINBEGIN statement endpart .\l"]
  72 -> "72R43" [style=solid]
 "72R43" [label="R43", fillcolor=3, shape=diamond, style=filled]
  73 [label="State 73\n\l 58 assignment: variable ASSIGN . expr\l"]
  73 -> 22 [style=solid label="IDENTIFIER"]
  73 -> 52 [style=solid label="STRING"]
  73 -> 53 [style=solid label="NUMBER"]
  73 -> 54 [style=solid label="PLUS"]
  73 -> 55 [style=solid label="MINUS"]
  73 -> 56 [style=solid label="NOT"]
  73 -> 57 [style=solid label="LPAREN"]
  73 -> 58 [style=solid label="NIL"]
  73 -> 59 [style=dashed label="functionCall"]
  73 -> 60 [style=dashed label="variable"]
  73 -> 61 [style=dashed label="signedExpression"]
  73 -> 62 [style=dashed label="signedTerm"]
  73 -> 63 [style=dashed label="sign"]
  73 -> 115 [style=dashed label="expr"]
  73 -> 65 [style=dashed label="term"]
  73 -> 66 [style=dashed label="factor"]
  74 [label="State 74\n\l 61 variable: variable POINT .\l"]
  74 -> "74R61" [style=solid]
 "74R61" [label="R61", fillcolor=3, shape=diamond, style=filled]
  75 [label="State 75\n\l 62 variable: variable DOT . IDENTIFIER\l"]
  75 -> 116 [style=solid label="IDENTIFIER"]
  76 [label="State 76\n\l 60 variable: variable LBRACKET . expressionList RBRACKET\l"]
  76 -> 22 [style=solid label="IDENTIFIER"]
  76 -> 52 [style=solid label="STRING"]
  76 -> 53 [style=solid label="NUMBER"]
  76 -> 54 [style=solid label="PLUS"]
  76 -> 55 [style=solid label="MINUS"]
  76 -> 56 [style=solid label="NOT"]
  76 -> 57 [style=solid label="LPAREN"]
  76 -> 58 [style=solid label="NIL"]
  76 -> 59 [style=dashed label="functionCall"]
  76 -> 60 [style=dashed label="variable"]
  76 -> 61 [style=dashed label="signedExpression"]
  76 -> 62 [style=dashed label="signedTerm"]
  76 -> 63 [style=dashed label="sign"]
  76 -> 88 [style=dashed label="expr"]
  76 -> 117 [style=dashed label="expressionList"]
  76 -> 65 [style=dashed label="term"]
  76 -> 66 [style=dashed label="factor"]
  77 [label="State 77\n\l  9 cdef: IDENTIFIER EQ . constant\l"]
  77 -> 118 [style=solid label="IDENTIFIER"]
  77 -> 119 [style=solid label="STRING"]
  77 -> 120 [style=solid label="NUMBER"]
  77 -> 54 [style=solid label="PLUS"]
  77 -> 55 [style=solid label="MINUS"]
  77 -> 121 [style=dashed label="constant"]
  77 -> 122 [style=dashed label="sign"]
  78 [label="State 78\n\l 10 clist: cdef SEMICOLON . clist\l 11      | cdef SEMICOLON .\l"]
  78 -> 35 [style=solid label="IDENTIFIER"]
  78 -> 36 [style=dashed label="cdef"]
  78 -> 123 [style=dashed label="clist"]
  78 -> "78R11" [style=solid]
 "78R11" [label="R11", fillcolor=3, shape=diamond, style=filled]
  79 [label="State 79\n\l 22 cblock: CONST clist tblock .\l"]
  79 -> "79R22" [style=solid]
 "79R22" [label="R22", fillcolor=3, shape=diamond, style=filled]
  80 [label="State 80\n\l  4 labelsList: NUMBER COMMA . labelsList\l"]
  80 -> 38 [style=solid label="NUMBER"]
  80 -> 124 [style=dashed label="labelsList"]
  81 [label="State 81\n\l  7 lblock: LABEL labelsList SEMICOLON . cblock\l"]
  81 -> 12 [style=solid label="BEGINBEGIN"]
  81 -> 13 [style=solid label="CONST"]
  81 -> 15 [style=solid label="TYPE"]
  81 -> 16 [style=solid label="VAR"]
  81 -> 125 [style=dashed label="cblock"]
  81 -> 19 [style=dashed label="tblock"]
  81 -> 20 [style=dashed label="vblock"]
  81 -> 21 [style=dashed label="block"]
  82 [label="State 82\n\l 17 tdef: IDENTIFIER EQ . type\l"]
  82 -> 126 [style=solid label="IDENTIFIER"]
  82 -> 119 [style=solid label="STRING"]
  82 -> 120 [style=solid label="NUMBER"]
  82 -> 54 [style=solid label="PLUS"]
  82 -> 55 [style=solid label="MINUS"]
  82 -> 127 [style=solid label="POINT"]
  82 -> 128 [style=solid label="LPAREN"]
  82 -> 129 [style=solid label="ARRAY"]
  82 -> 130 [style=solid label="RECORD"]
  82 -> 131 [style=dashed label="constant"]
  82 -> 132 [style=dashed label="type"]
  82 -> 133 [style=dashed label="basicType"]
  82 -> 122 [style=dashed label="sign"]
  83 [label="State 83\n\l 18 tlist: tdef SEMICOLON . tlist\l 19      | tdef SEMICOLON .\l"]
  83 -> 40 [style=solid label="IDENTIFIER"]
  83 -> 41 [style=dashed label="tdef"]
  83 -> 134 [style=dashed label="tlist"]
  83 -> "83R19" [style=solid]
 "83R19" [label="R19", fillcolor=3, shape=diamond, style=filled]
  84 [label="State 84\n\l 24 tblock: TYPE tlist vblock .\l"]
  84 -> "84R24" [style=solid]
 "84R24" [label="R24", fillcolor=3, shape=diamond, style=filled]
  85 [label="State 85\n\l 30 vargroup: idlist COLON . type\l"]
  85 -> 126 [style=solid label="IDENTIFIER"]
  85 -> 119 [style=solid label="STRING"]
  85 -> 120 [style=solid label="NUMBER"]
  85 -> 54 [style=solid label="PLUS"]
  85 -> 55 [style=solid label="MINUS"]
  85 -> 127 [style=solid label="POINT"]
  85 -> 128 [style=solid label="LPAREN"]
  85 -> 129 [style=solid label="ARRAY"]
  85 -> 130 [style=solid label="RECORD"]
  85 -> 131 [style=dashed label="constant"]
  85 -> 135 [style=dashed label="type"]
  85 -> 133 [style=dashed label="basicType"]
  85 -> 122 [style=dashed label="sign"]
  86 [label="State 86\n\l 26 vblock: VAR varspecs block .\l"]
  86 -> "86R26" [style=solid]
 "86R26" [label="R26", fillcolor=3, shape=diamond, style=filled]
  87 [label="State 87\n\l 28 varspecs: vargroup SEMICOLON . varspecs\l 29         | vargroup SEMICOLON .\l"]
  87 -> 6 [style=solid label="IDENTIFIER"]
  87 -> 43 [style=dashed label="idlist"]
  87 -> 136 [style=dashed label="varspecs"]
  87 -> 45 [style=dashed label="vargroup"]
  87 -> "87R29" [style=solid]
 "87R29" [label="R29", fillcolor=3, shape=diamond, style=filled]
  88 [label="State 88\n\l 71 expr: expr . EQ signedExpression\l 72     | expr . LT signedExpression\l 73     | expr . GT signedExpression\l 74     | expr . NE signedExpression\l 75     | expr . LE signedExpression\l 76     | expr . GE signedExpression\l 77     | expr . IN signedExpression\l 79 expressionList: expr . COMMA expressionList\l 80               | expr .\l"]
  88 -> 98 [style=solid label="EQ"]
  88 -> 99 [style=solid label="NE"]
  88 -> 100 [style=solid label="LT"]
  88 -> 101 [style=solid label="LE"]
  88 -> 102 [style=solid label="GE"]
  88 -> 103 [style=solid label="GT"]
  88 -> 104 [style=solid label="IN"]
  88 -> 137 [style=solid label="COMMA"]
  88 -> "88R80" [style=solid]
 "88R80" [label="R80", fillcolor=3, shape=diamond, style=filled]
  89 [label="State 89\n\l 53 functionCall: IDENTIFIER LPAREN expressionList . RPAREN\l"]
  89 -> 138 [style=solid label="RPAREN"]
  90 [label="State 90\n\l  6 label: NUMBER COLON statement .\l"]
  90 -> "90R6" [style=solid]
 "90R6" [label="R6", fillcolor=3, shape=diamond, style=filled]
  91 [label="State 91\n\l 48 statement: FOR assignment TO . expr DO statement\l"]
  91 -> 22 [style=solid label="IDENTIFIER"]
  91 -> 52 [style=solid label="STRING"]
  91 -> 53 [style=solid label="NUMBER"]
  91 -> 54 [style=solid label="PLUS"]
  91 -> 55 [style=solid label="MINUS"]
  91 -> 56 [style=solid label="NOT"]
  91 -> 57 [style=solid label="LPAREN"]
  91 -> 58 [style=solid label="NIL"]
  91 -> 59 [style=dashed label="functionCall"]
  91 -> 60 [style=dashed label="variable"]
  91 -> 61 [style=dashed label="signedExpression"]
  91 -> 62 [style=dashed label="signedTerm"]
  91 -> 63 [style=dashed label="sign"]
  91 -> 139 [style=dashed label="expr"]
  91 -> 65 [style=dashed label="term"]
  91 -> 66 [style=dashed label="factor"]
  92 [label="State 92\n\l 93 factor: NOT factor .\l"]
  92 -> "92R93" [style=solid]
 "92R93" [label="R93", fillcolor=3, shape=diamond, style=filled]
  93 [label="State 93\n\l 71 expr: expr . EQ signedExpression\l 72     | expr . LT signedExpression\l 73     | expr . GT signedExpression\l 74     | expr . NE signedExpression\l 75     | expr . LE signedExpression\l 76     | expr . GE signedExpression\l 77     | expr . IN signedExpression\l 92 factor: LPAREN expr . RPAREN\l"]
  93 -> 98 [style=solid label="EQ"]
  93 -> 99 [style=solid label="NE"]
  93 -> 100 [style=solid label="LT"]
  93 -> 101 [style=solid label="LE"]
  93 -> 102 [style=solid label="GE"]
  93 -> 103 [style=solid label="GT"]
  93 -> 104 [style=solid label="IN"]
  93 -> 140 [style=solid label="RPAREN"]
  94 [label="State 94\n\l 64 signedExpression: signedExpression PLUS . term\l"]
  94 -> 22 [style=solid label="IDENTIFIER"]
  94 -> 52 [style=solid label="STRING"]
  94 -> 53 [style=solid label="NUMBER"]
  94 -> 56 [style=solid label="NOT"]
  94 -> 57 [style=solid label="LPAREN"]
  94 -> 58 [style=solid label="NIL"]
  94 -> 59 [style=dashed label="functionCall"]
  94 -> 60 [style=dashed label="variable"]
  94 -> 141 [style=dashed label="term"]
  94 -> 66 [style=dashed label="factor"]
  95 [label="State 95\n\l 65 signedExpression: signedExpression MINUS . term\l"]
  95 -> 22 [style=solid label="IDENTIFIER"]
  95 -> 52 [style=solid label="STRING"]
  95 -> 53 [style=solid label="NUMBER"]
  95 -> 56 [style=solid label="NOT"]
  95 -> 57 [style=solid label="LPAREN"]
  95 -> 58 [style=solid label="NIL"]
  95 -> 59 [style=dashed label="functionCall"]
  95 -> 60 [style=dashed label="variable"]
  95 -> 142 [style=dashed label="term"]
  95 -> 66 [style=dashed label="factor"]
  96 [label="State 96\n\l 66 signedExpression: signedExpression OR . term\l"]
  96 -> 22 [style=solid label="IDENTIFIER"]
  96 -> 52 [style=solid label="STRING"]
  96 -> 53 [style=solid label="NUMBER"]
  96 -> 56 [style=solid label="NOT"]
  96 -> 57 [style=solid label="LPAREN"]
  96 -> 58 [style=solid label="NIL"]
  96 -> 59 [style=dashed label="functionCall"]
  96 -> 60 [style=dashed label="variable"]
  96 -> 143 [style=dashed label="term"]
  96 -> 66 [style=dashed label="factor"]
  97 [label="State 97\n\l 67 signedTerm: sign term .\l 81 term: term . TIMES factor\l 82     | term . DIVIDE factor\l 83     | term . AND factor\l 84     | term . DIV factor\l 85     | term . MOD factor\l"]
  97 -> 106 [style=solid label="TIMES"]
  97 -> 107 [style=solid label="DIVIDE"]
  97 -> 108 [style=solid label="AND"]
  97 -> 109 [style=solid label="DIV"]
  97 -> 110 [style=solid label="MOD"]
  97 -> "97R67" [style=solid]
 "97R67" [label="R67", fillcolor=3, shape=diamond, style=filled]
  98 [label="State 98\n\l 71 expr: expr EQ . signedExpression\l"]
  98 -> 22 [style=solid label="IDENTIFIER"]
  98 -> 52 [style=solid label="STRING"]
  98 -> 53 [style=solid label="NUMBER"]
  98 -> 54 [style=solid label="PLUS"]
  98 -> 55 [style=solid label="MINUS"]
  98 -> 56 [style=solid label="NOT"]
  98 -> 57 [style=solid label="LPAREN"]
  98 -> 58 [style=solid label="NIL"]
  98 -> 59 [style=dashed label="functionCall"]
  98 -> 60 [style=dashed label="variable"]
  98 -> 144 [style=dashed label="signedExpression"]
  98 -> 62 [style=dashed label="signedTerm"]
  98 -> 63 [style=dashed label="sign"]
  98 -> 65 [style=dashed label="term"]
  98 -> 66 [style=dashed label="factor"]
  99 [label="State 99\n\l 74 expr: expr NE . signedExpression\l"]
  99 -> 22 [style=solid label="IDENTIFIER"]
  99 -> 52 [style=solid label="STRING"]
  99 -> 53 [style=solid label="NUMBER"]
  99 -> 54 [style=solid label="PLUS"]
  99 -> 55 [style=solid label="MINUS"]
  99 -> 56 [style=solid label="NOT"]
  99 -> 57 [style=solid label="LPAREN"]
  99 -> 58 [style=solid label="NIL"]
  99 -> 59 [style=dashed label="functionCall"]
  99 -> 60 [style=dashed label="variable"]
  99 -> 145 [style=dashed label="signedExpression"]
  99 -> 62 [style=dashed label="signedTerm"]
  99 -> 63 [style=dashed label="sign"]
  99 -> 65 [style=dashed label="term"]
  99 -> 66 [style=dashed label="factor"]
  100 [label="State 100\n\l 72 expr: expr LT . signedExpression\l"]
  100 -> 22 [style=solid label="IDENTIFIER"]
  100 -> 52 [style=solid label="STRING"]
  100 -> 53 [style=solid label="NUMBER"]
  100 -> 54 [style=solid label="PLUS"]
  100 -> 55 [style=solid label="MINUS"]
  100 -> 56 [style=solid label="NOT"]
  100 -> 57 [style=solid label="LPAREN"]
  100 -> 58 [style=solid label="NIL"]
  100 -> 59 [style=dashed label="functionCall"]
  100 -> 60 [style=dashed label="variable"]
  100 -> 146 [style=dashed label="signedExpression"]
  100 -> 62 [style=dashed label="signedTerm"]
  100 -> 63 [style=dashed label="sign"]
  100 -> 65 [style=dashed label="term"]
  100 -> 66 [style=dashed label="factor"]
  101 [label="State 101\n\l 75 expr: expr LE . signedExpression\l"]
  101 -> 22 [style=solid label="IDENTIFIER"]
  101 -> 52 [style=solid label="STRING"]
  101 -> 53 [style=solid label="NUMBER"]
  101 -> 54 [style=solid label="PLUS"]
  101 -> 55 [style=solid label="MINUS"]
  101 -> 56 [style=solid label="NOT"]
  101 -> 57 [style=solid label="LPAREN"]
  101 -> 58 [style=solid label="NIL"]
  101 -> 59 [style=dashed label="functionCall"]
  101 -> 60 [style=dashed label="variable"]
  101 -> 147 [style=dashed label="signedExpression"]
  101 -> 62 [style=dashed label="signedTerm"]
  101 -> 63 [style=dashed label="sign"]
  101 -> 65 [style=dashed label="term"]
  101 -> 66 [style=dashed label="factor"]
  102 [label="State 102\n\l 76 expr: expr GE . signedExpression\l"]
  102 -> 22 [style=solid label="IDENTIFIER"]
  102 -> 52 [style=solid label="STRING"]
  102 -> 53 [style=solid label="NUMBER"]
  102 -> 54 [style=solid label="PLUS"]
  102 -> 55 [style=solid label="MINUS"]
  102 -> 56 [style=solid label="NOT"]
  102 -> 57 [style=solid label="LPAREN"]
  102 -> 58 [style=solid label="NIL"]
  102 -> 59 [style=dashed label="functionCall"]
  102 -> 60 [style=dashed label="variable"]
  102 -> 148 [style=dashed label="signedExpression"]
  102 -> 62 [style=dashed label="signedTerm"]
  102 -> 63 [style=dashed label="sign"]
  102 -> 65 [style=dashed label="term"]
  102 -> 66 [style=dashed label="factor"]
  103 [label="State 103\n\l 73 expr: expr GT . signedExpression\l"]
  103 -> 22 [style=solid label="IDENTIFIER"]
  103 -> 52 [style=solid label="STRING"]
  103 -> 53 [style=solid label="NUMBER"]
  103 -> 54 [style=solid label="PLUS"]
  103 -> 55 [style=solid label="MINUS"]
  103 -> 56 [style=solid label="NOT"]
  103 -> 57 [style=solid label="LPAREN"]
  103 -> 58 [style=solid label="NIL"]
  103 -> 59 [style=dashed label="functionCall"]
  103 -> 60 [style=dashed label="variable"]
  103 -> 149 [style=dashed label="signedExpression"]
  103 -> 62 [style=dashed label="signedTerm"]
  103 -> 63 [style=dashed label="sign"]
  103 -> 65 [style=dashed label="term"]
  103 -> 66 [style=dashed label="factor"]
  104 [label="State 104\n\l 77 expr: expr IN . signedExpression\l"]
  104 -> 22 [style=solid label="IDENTIFIER"]
  104 -> 52 [style=solid label="STRING"]
  104 -> 53 [style=solid label="NUMBER"]
  104 -> 54 [style=solid label="PLUS"]
  104 -> 55 [style=solid label="MINUS"]
  104 -> 56 [style=solid label="NOT"]
  104 -> 57 [style=solid label="LPAREN"]
  104 -> 58 [style=solid label="NIL"]
  104 -> 59 [style=dashed label="functionCall"]
  104 -> 60 [style=dashed label="variable"]
  104 -> 150 [style=dashed label="signedExpression"]
  104 -> 62 [style=dashed label="signedTerm"]
  104 -> 63 [style=dashed label="sign"]
  104 -> 65 [style=dashed label="term"]
  104 -> 66 [style=dashed label="factor"]
  105 [label="State 105\n\l 45 statement: IF expr THEN . statement endif\l"]
  105 -> 22 [style=solid label="IDENTIFIER"]
  105 -> 23 [style=solid label="NUMBER"]
  105 -> 12 [style=solid label="BEGINBEGIN"]
  105 -> 24 [style=solid label="FOR"]
  105 -> 25 [style=solid label="GOTO"]
  105 -> 26 [style=solid label="IF"]
  105 -> 27 [style=solid label="REPEAT"]
  105 -> 28 [style=solid label="WHILE"]
  105 -> 29 [style=dashed label="label"]
  105 -> 30 [style=dashed label="block"]
  105 -> 151 [style=dashed label="statement"]
  105 -> 32 [style=dashed label="functionCall"]
  105 -> 33 [style=dashed label="assignment"]
  105 -> 34 [style=dashed label="variable"]
  106 [label="State 106\n\l 81 term: term TIMES . factor\l"]
  106 -> 22 [style=solid label="IDENTIFIER"]
  106 -> 52 [style=solid label="STRING"]
  106 -> 53 [style=solid label="NUMBER"]
  106 -> 56 [style=solid label="NOT"]
  106 -> 57 [style=solid label="LPAREN"]
  106 -> 58 [style=solid label="NIL"]
  106 -> 59 [style=dashed label="functionCall"]
  106 -> 60 [style=dashed label="variable"]
  106 -> 152 [style=dashed label="factor"]
  107 [label="State 107\n\l 82 term: term DIVIDE . factor\l"]
  107 -> 22 [style=solid label="IDENTIFIER"]
  107 -> 52 [style=solid label="STRING"]
  107 -> 53 [style=solid label="NUMBER"]
  107 -> 56 [style=solid label="NOT"]
  107 -> 57 [style=solid label="LPAREN"]
  107 -> 58 [style=solid label="NIL"]
  107 -> 59 [style=dashed label="functionCall"]
  107 -> 60 [style=dashed label="variable"]
  107 -> 153 [style=dashed label="factor"]
  108 [label="State 108\n\l 83 term: term AND . factor\l"]
  108 -> 22 [style=solid label="IDENTIFIER"]
  108 -> 52 [style=solid label="STRING"]
  108 -> 53 [style=solid label="NUMBER"]
  108 -> 56 [style=solid label="NOT"]
  108 -> 57 [style=solid label="LPAREN"]
  108 -> 58 [style=solid label="NIL"]
  108 -> 59 [style=dashed label="functionCall"]
  108 -> 60 [style=dashed label="variable"]
  108 -> 154 [style=dashed label="factor"]
  109 [label="State 109\n\l 84 term: term DIV . factor\l"]
  109 -> 22 [style=solid label="IDENTIFIER"]
  109 -> 52 [style=solid label="STRING"]
  109 -> 53 [style=solid label="NUMBER"]
  109 -> 56 [style=solid label="NOT"]
  109 -> 57 [style=solid label="LPAREN"]
  109 -> 58 [style=solid label="NIL"]
  109 -> 59 [style=dashed label="functionCall"]
  109 -> 60 [style=dashed label="variable"]
  109 -> 155 [style=dashed label="factor"]
  110 [label="State 110\n\l 85 term: term MOD . factor\l"]
  110 -> 22 [style=solid label="IDENTIFIER"]
  110 -> 52 [style=solid label="STRING"]
  110 -> 53 [style=solid label="NUMBER"]
  110 -> 56 [style=solid label="NOT"]
  110 -> 57 [style=solid label="LPAREN"]
  110 -> 58 [style=solid label="NIL"]
  110 -> 59 [style=dashed label="functionCall"]
  110 -> 60 [style=dashed label="variable"]
  110 -> 156 [style=dashed label="factor"]
  111 [label="State 111\n\l 49 statement: REPEAT statementList UNTIL . expr\l"]
  111 -> 22 [style=solid label="IDENTIFIER"]
  111 -> 52 [style=solid label="STRING"]
  111 -> 53 [style=solid label="NUMBER"]
  111 -> 54 [style=solid label="PLUS"]
  111 -> 55 [style=solid label="MINUS"]
  111 -> 56 [style=solid label="NOT"]
  111 -> 57 [style=solid label="LPAREN"]
  111 -> 58 [style=solid label="NIL"]
  111 -> 59 [style=dashed label="functionCall"]
  111 -> 60 [style=dashed label="variable"]
  111 -> 61 [style=dashed label="signedExpression"]
  111 -> 62 [style=dashed label="signedTerm"]
  111 -> 63 [style=dashed label="sign"]
  111 -> 157 [style=dashed label="expr"]
  111 -> 65 [style=dashed label="term"]
  111 -> 66 [style=dashed label="factor"]
  112 [label="State 112\n\l 20 statementList: statement SEMICOLON . statementList\l"]
  112 -> 22 [style=solid label="IDENTIFIER"]
  112 -> 23 [style=solid label="NUMBER"]
  112 -> 12 [style=solid label="BEGINBEGIN"]
  112 -> 24 [style=solid label="FOR"]
  112 -> 25 [style=solid label="GOTO"]
  112 -> 26 [style=solid label="IF"]
  112 -> 27 [style=solid label="REPEAT"]
  112 -> 28 [style=solid label="WHILE"]
  112 -> 29 [style=dashed label="label"]
  112 -> 158 [style=dashed label="statementList"]
  112 -> 30 [style=dashed label="block"]
  112 -> 68 [style=dashed label="statement"]
  112 -> 32 [style=dashed label="functionCall"]
  112 -> 33 [style=dashed label="assignment"]
  112 -> 34 [style=dashed label="variable"]
  113 [label="State 113\n\l 51 statement: WHILE expr DO . statement\l"]
  113 -> 22 [style=solid label="IDENTIFIER"]
  113 -> 23 [style=solid label="NUMBER"]
  113 -> 12 [style=solid label="BEGINBEGIN"]
  113 -> 24 [style=solid label="FOR"]
  113 -> 25 [style=solid label="GOTO"]
  113 -> 26 [style=solid label="IF"]
  113 -> 27 [style=solid label="REPEAT"]
  113 -> 28 [style=solid label="WHILE"]
  113 -> 29 [style=dashed label="label"]
  113 -> 30 [style=dashed label="block"]
  113 -> 159 [style=dashed label="statement"]
  113 -> 32 [style=dashed label="functionCall"]
  113 -> 33 [style=dashed label="assignment"]
  113 -> 34 [style=dashed label="variable"]
  114 [label="State 114\n\l 54 endpart: SEMICOLON statement . endpart\l"]
  114 -> 70 [style=solid label="SEMICOLON"]
  114 -> 71 [style=solid label="END"]
  114 -> 160 [style=dashed label="endpart"]
  115 [label="State 115\n\l 58 assignment: variable ASSIGN expr .\l 71 expr: expr . EQ signedExpression\l 72     | expr . LT signedExpression\l 73     | expr . GT signedExpression\l 74     | expr . NE signedExpression\l 75     | expr . LE signedExpression\l 76     | expr . GE signedExpression\l 77     | expr . IN signedExpression\l"]
  115 -> 98 [style=solid label="EQ"]
  115 -> 99 [style=solid label="NE"]
  115 -> 100 [style=solid label="LT"]
  115 -> 101 [style=solid label="LE"]
  115 -> 102 [style=solid label="GE"]
  115 -> 103 [style=solid label="GT"]
  115 -> 104 [style=solid label="IN"]
  115 -> "115R58" [style=solid]
 "115R58" [label="R58", fillcolor=3, shape=diamond, style=filled]
  116 [label="State 116\n\l 62 variable: variable DOT IDENTIFIER .\l"]
  116 -> "116R62" [style=solid]
 "116R62" [label="R62", fillcolor=3, shape=diamond, style=filled]
  117 [label="State 117\n\l 60 variable: variable LBRACKET expressionList . RBRACKET\l"]
  117 -> 161 [style=solid label="RBRACKET"]
  118 [label="State 118\n\l 13 constant: IDENTIFIER .\l"]
  118 -> "118R13" [style=solid]
 "118R13" [label="R13", fillcolor=3, shape=diamond, style=filled]
  119 [label="State 119\n\l 16 constant: STRING .\l"]
  119 -> "119R16" [style=solid]
 "119R16" [label="R16", fillcolor=3, shape=diamond, style=filled]
  120 [label="State 120\n\l 15 constant: NUMBER .\l"]
  120 -> "120R15" [style=solid]
 "120R15" [label="R15", fillcolor=3, shape=diamond, style=filled]
  121 [label="State 121\n\l  9 cdef: IDENTIFIER EQ constant .\l"]
  121 -> "121R9" [style=solid]
 "121R9" [label="R9", fillcolor=3, shape=diamond, style=filled]
  122 [label="State 122\n\l 12 constant: sign . IDENTIFIER\l 14         | sign . NUMBER\l"]
  122 -> 162 [style=solid label="IDENTIFIER"]
  122 -> 163 [style=solid label="NUMBER"]
  123 [label="State 123\n\l 10 clist: cdef SEMICOLON clist .\l"]
  123 -> "123R10" [style=solid]
 "123R10" [label="R10", fillcolor=3, shape=diamond, style=filled]
  124 [label="State 124\n\l  4 labelsList: NUMBER COMMA labelsList .\l"]
  124 -> "124R4" [style=solid]
 "124R4" [label="R4", fillcolor=3, shape=diamond, style=filled]
  125 [label="State 125\n\l  7 lblock: LABEL labelsList SEMICOLON cblock .\l"]
  125 -> "125R7" [style=solid]
 "125R7" [label="R7", fillcolor=3, shape=diamond, style=filled]
  126 [label="State 126\n\l 13 constant: IDENTIFIER .\l 40 basicType: IDENTIFIER .\l"]
  126 -> "126R13" [label="[DOTDOT]", style=solid]
 "126R13" [label="R13", fillcolor=3, shape=diamond, style=filled]
  126 -> "126R40" [style=solid]
 "126R40" [label="R40", fillcolor=3, shape=diamond, style=filled]
  127 [label="State 127\n\l 32 type: POINT . IDENTIFIER\l"]
  127 -> 164 [style=solid label="IDENTIFIER"]
  128 [label="State 128\n\l 42 basicType: LPAREN . idlist RPAREN\l"]
  128 -> 6 [style=solid label="IDENTIFIER"]
  128 -> 165 [style=dashed label="idlist"]
  129 [label="State 129\n\l 33 type: ARRAY . LBRACKET basicList RBRACKET OF type\l"]
  129 -> 166 [style=solid label="LBRACKET"]
  130 [label="State 130\n\l 34 type: RECORD . multiFieldsList END\l"]
  130 -> 6 [style=solid label="IDENTIFIER"]
  130 -> 167 [style=dashed label="idlist"]
  130 -> 168 [style=dashed label="fieldsList"]
  130 -> 169 [style=dashed label="multiFieldsList"]
  131 [label="State 131\n\l 41 basicType: constant . DOTDOT constant\l"]
  131 -> 170 [style=solid label="DOTDOT"]
  132 [label="State 132\n\l 17 tdef: IDENTIFIER EQ type .\l"]
  132 -> "132R17" [style=solid]
 "132R17" [label="R17", fillcolor=3, shape=diamond, style=filled]
  133 [label="State 133\n\l 31 type: basicType .\l"]
  133 -> "133R31" [style=solid]
 "133R31" [label="R31", fillcolor=3, shape=diamond, style=filled]
  134 [label="State 134\n\l 18 tlist: tdef SEMICOLON tlist .\l"]
  134 -> "134R18" [style=solid]
 "134R18" [label="R18", fillcolor=3, shape=diamond, style=filled]
  135 [label="State 135\n\l 30 vargroup: idlist COLON type .\l"]
  135 -> "135R30" [style=solid]
 "135R30" [label="R30", fillcolor=3, shape=diamond, style=filled]
  136 [label="State 136\n\l 28 varspecs: vargroup SEMICOLON varspecs .\l"]
  136 -> "136R28" [style=solid]
 "136R28" [label="R28", fillcolor=3, shape=diamond, style=filled]
  137 [label="State 137\n\l 79 expressionList: expr COMMA . expressionList\l"]
  137 -> 22 [style=solid label="IDENTIFIER"]
  137 -> 52 [style=solid label="STRING"]
  137 -> 53 [style=solid label="NUMBER"]
  137 -> 54 [style=solid label="PLUS"]
  137 -> 55 [style=solid label="MINUS"]
  137 -> 56 [style=solid label="NOT"]
  137 -> 57 [style=solid label="LPAREN"]
  137 -> 58 [style=solid label="NIL"]
  137 -> 59 [style=dashed label="functionCall"]
  137 -> 60 [style=dashed label="variable"]
  137 -> 61 [style=dashed label="signedExpression"]
  137 -> 62 [style=dashed label="signedTerm"]
  137 -> 63 [style=dashed label="sign"]
  137 -> 88 [style=dashed label="expr"]
  137 -> 171 [style=dashed label="expressionList"]
  137 -> 65 [style=dashed label="term"]
  137 -> 66 [style=dashed label="factor"]
  138 [label="State 138\n\l 53 functionCall: IDENTIFIER LPAREN expressionList RPAREN .\l"]
  138 -> "138R53" [style=solid]
 "138R53" [label="R53", fillcolor=3, shape=diamond, style=filled]
  139 [label="State 139\n\l 48 statement: FOR assignment TO expr . DO statement\l 71 expr: expr . EQ signedExpression\l 72     | expr . LT signedExpression\l 73     | expr . GT signedExpression\l 74     | expr . NE signedExpression\l 75     | expr . LE signedExpression\l 76     | expr . GE signedExpression\l 77     | expr . IN signedExpression\l"]
  139 -> 98 [style=solid label="EQ"]
  139 -> 99 [style=solid label="NE"]
  139 -> 100 [style=solid label="LT"]
  139 -> 101 [style=solid label="LE"]
  139 -> 102 [style=solid label="GE"]
  139 -> 103 [style=solid label="GT"]
  139 -> 104 [style=solid label="IN"]
  139 -> 172 [style=solid label="DO"]
  140 [label="State 140\n\l 92 factor: LPAREN expr RPAREN .\l"]
  140 -> "140R92" [style=solid]
 "140R92" [label="R92", fillcolor=3, shape=diamond, style=filled]
  141 [label="State 141\n\l 64 signedExpression: signedExpression PLUS term .\l 81 term: term . TIMES factor\l 82     | term . DIVIDE factor\l 83     | term . AND factor\l 84     | term . DIV factor\l 85     | term . MOD factor\l"]
  141 -> 106 [style=solid label="TIMES"]
  141 -> 107 [style=solid label="DIVIDE"]
  141 -> 108 [style=solid label="AND"]
  141 -> 109 [style=solid label="DIV"]
  141 -> 110 [style=solid label="MOD"]
  141 -> "141R64" [style=solid]
 "141R64" [label="R64", fillcolor=3, shape=diamond, style=filled]
  142 [label="State 142\n\l 65 signedExpression: signedExpression MINUS term .\l 81 term: term . TIMES factor\l 82     | term . DIVIDE factor\l 83     | term . AND factor\l 84     | term . DIV factor\l 85     | term . MOD factor\l"]
  142 -> 106 [style=solid label="TIMES"]
  142 -> 107 [style=solid label="DIVIDE"]
  142 -> 108 [style=solid label="AND"]
  142 -> 109 [style=solid label="DIV"]
  142 -> 110 [style=solid label="MOD"]
  142 -> "142R65" [style=solid]
 "142R65" [label="R65", fillcolor=3, shape=diamond, style=filled]
  143 [label="State 143\n\l 66 signedExpression: signedExpression OR term .\l 81 term: term . TIMES factor\l 82     | term . DIVIDE factor\l 83     | term . AND factor\l 84     | term . DIV factor\l 85     | term . MOD factor\l"]
  143 -> 106 [style=solid label="TIMES"]
  143 -> 107 [style=solid label="DIVIDE"]
  143 -> 108 [style=solid label="AND"]
  143 -> 109 [style=solid label="DIV"]
  143 -> 110 [style=solid label="MOD"]
  143 -> "143R66" [style=solid]
 "143R66" [label="R66", fillcolor=3, shape=diamond, style=filled]
  144 [label="State 144\n\l 64 signedExpression: signedExpression . PLUS term\l 65                 | signedExpression . MINUS term\l 66                 | signedExpression . OR term\l 71 expr: expr EQ signedExpression .\l"]
  144 -> 94 [style=solid label="PLUS"]
  144 -> 95 [style=solid label="MINUS"]
  144 -> 96 [style=solid label="OR"]
  144 -> "144R71" [style=solid]
 "144R71" [label="R71", fillcolor=3, shape=diamond, style=filled]
  145 [label="State 145\n\l 64 signedExpression: signedExpression . PLUS term\l 65                 | signedExpression . MINUS term\l 66                 | signedExpression . OR term\l 74 expr: expr NE signedExpression .\l"]
  145 -> 94 [style=solid label="PLUS"]
  145 -> 95 [style=solid label="MINUS"]
  145 -> 96 [style=solid label="OR"]
  145 -> "145R74" [style=solid]
 "145R74" [label="R74", fillcolor=3, shape=diamond, style=filled]
  146 [label="State 146\n\l 64 signedExpression: signedExpression . PLUS term\l 65                 | signedExpression . MINUS term\l 66                 | signedExpression . OR term\l 72 expr: expr LT signedExpression .\l"]
  146 -> 94 [style=solid label="PLUS"]
  146 -> 95 [style=solid label="MINUS"]
  146 -> 96 [style=solid label="OR"]
  146 -> "146R72" [style=solid]
 "146R72" [label="R72", fillcolor=3, shape=diamond, style=filled]
  147 [label="State 147\n\l 64 signedExpression: signedExpression . PLUS term\l 65                 | signedExpression . MINUS term\l 66                 | signedExpression . OR term\l 75 expr: expr LE signedExpression .\l"]
  147 -> 94 [style=solid label="PLUS"]
  147 -> 95 [style=solid label="MINUS"]
  147 -> 96 [style=solid label="OR"]
  147 -> "147R75" [style=solid]
 "147R75" [label="R75", fillcolor=3, shape=diamond, style=filled]
  148 [label="State 148\n\l 64 signedExpression: signedExpression . PLUS term\l 65                 | signedExpression . MINUS term\l 66                 | signedExpression . OR term\l 76 expr: expr GE signedExpression .\l"]
  148 -> 94 [style=solid label="PLUS"]
  148 -> 95 [style=solid label="MINUS"]
  148 -> 96 [style=solid label="OR"]
  148 -> "148R76" [style=solid]
 "148R76" [label="R76", fillcolor=3, shape=diamond, style=filled]
  149 [label="State 149\n\l 64 signedExpression: signedExpression . PLUS term\l 65                 | signedExpression . MINUS term\l 66                 | signedExpression . OR term\l 73 expr: expr GT signedExpression .\l"]
  149 -> 94 [style=solid label="PLUS"]
  149 -> 95 [style=solid label="MINUS"]
  149 -> 96 [style=solid label="OR"]
  149 -> "149R73" [style=solid]
 "149R73" [label="R73", fillcolor=3, shape=diamond, style=filled]
  150 [label="State 150\n\l 64 signedExpression: signedExpression . PLUS term\l 65                 | signedExpression . MINUS term\l 66                 | signedExpression . OR term\l 77 expr: expr IN signedExpression .\l"]
  150 -> 94 [style=solid label="PLUS"]
  150 -> 95 [style=solid label="MINUS"]
  150 -> 96 [style=solid label="OR"]
  150 -> "150R77" [style=solid]
 "150R77" [label="R77", fillcolor=3, shape=diamond, style=filled]
  151 [label="State 151\n\l 45 statement: IF expr THEN statement . endif\l"]
  151 -> 173 [style=solid label="ELSE"]
  151 -> 174 [style=dashed label="endif"]
  151 -> "151R57d" [label="[ELSE]", style=solid]
 "151R57d" [label="R57", fillcolor=5, shape=diamond, style=filled]
  151 -> "151R57" [style=solid]
 "151R57" [label="R57", fillcolor=3, shape=diamond, style=filled]
  152 [label="State 152\n\l 81 term: term TIMES factor .\l"]
  152 -> "152R81" [style=solid]
 "152R81" [label="R81", fillcolor=3, shape=diamond, style=filled]
  153 [label="State 153\n\l 82 term: term DIVIDE factor .\l"]
  153 -> "153R82" [style=solid]
 "153R82" [label="R82", fillcolor=3, shape=diamond, style=filled]
  154 [label="State 154\n\l 83 term: term AND factor .\l"]
  154 -> "154R83" [style=solid]
 "154R83" [label="R83", fillcolor=3, shape=diamond, style=filled]
  155 [label="State 155\n\l 84 term: term DIV factor .\l"]
  155 -> "155R84" [style=solid]
 "155R84" [label="R84", fillcolor=3, shape=diamond, style=filled]
  156 [label="State 156\n\l 85 term: term MOD factor .\l"]
  156 -> "156R85" [style=solid]
 "156R85" [label="R85", fillcolor=3, shape=diamond, style=filled]
  157 [label="State 157\n\l 49 statement: REPEAT statementList UNTIL expr .\l 71 expr: expr . EQ signedExpression\l 72     | expr . LT signedExpression\l 73     | expr . GT signedExpression\l 74     | expr . NE signedExpression\l 75     | expr . LE signedExpression\l 76     | expr . GE signedExpression\l 77     | expr . IN signedExpression\l"]
  157 -> 98 [style=solid label="EQ"]
  157 -> 99 [style=solid label="NE"]
  157 -> 100 [style=solid label="LT"]
  157 -> 101 [style=solid label="LE"]
  157 -> 102 [style=solid label="GE"]
  157 -> 103 [style=solid label="GT"]
  157 -> 104 [style=solid label="IN"]
  157 -> "157R49" [style=solid]
 "157R49" [label="R49", fillcolor=3, shape=diamond, style=filled]
  158 [label="State 158\n\l 20 statementList: statement SEMICOLON statementList .\l"]
  158 -> "158R20" [style=solid]
 "158R20" [label="R20", fillcolor=3, shape=diamond, style=filled]
  159 [label="State 159\n\l 51 statement: WHILE expr DO statement .\l"]
  159 -> "159R51" [style=solid]
 "159R51" [label="R51", fillcolor=3, shape=diamond, style=filled]
  160 [label="State 160\n\l 54 endpart: SEMICOLON statement endpart .\l"]
  160 -> "160R54" [style=solid]
 "160R54" [label="R54", fillcolor=3, shape=diamond, style=filled]
  161 [label="State 161\n\l 60 variable: variable LBRACKET expressionList RBRACKET .\l"]
  161 -> "161R60" [style=solid]
 "161R60" [label="R60", fillcolor=3, shape=diamond, style=filled]
  162 [label="State 162\n\l 12 constant: sign IDENTIFIER .\l"]
  162 -> "162R12" [style=solid]
 "162R12" [label="R12", fillcolor=3, shape=diamond, style=filled]
  163 [label="State 163\n\l 14 constant: sign NUMBER .\l"]
  163 -> "163R14" [style=solid]
 "163R14" [label="R14", fillcolor=3, shape=diamond, style=filled]
  164 [label="State 164\n\l 32 type: POINT IDENTIFIER .\l"]
  164 -> "164R32" [style=solid]
 "164R32" [label="R32", fillcolor=3, shape=diamond, style=filled]
  165 [label="State 165\n\l 42 basicType: LPAREN idlist . RPAREN\l"]
  165 -> 175 [style=solid label="RPAREN"]
  166 [label="State 166\n\l 33 type: ARRAY LBRACKET . basicList RBRACKET OF type\l"]
  166 -> 126 [style=solid label="IDENTIFIER"]
  166 -> 119 [style=solid label="STRING"]
  166 -> 120 [style=solid label="NUMBER"]
  166 -> 54 [style=solid label="PLUS"]
  166 -> 55 [style=solid label="MINUS"]
  166 -> 128 [style=solid label="LPAREN"]
  166 -> 131 [style=dashed label="constant"]
  166 -> 176 [style=dashed label="basicList"]
  166 -> 177 [style=dashed label="basicType"]
  166 -> 122 [style=dashed label="sign"]
  167 [label="State 167\n\l 35 fieldsList: idlist . COLON type\l"]
  167 -> 178 [style=solid label="COLON"]
  168 [label="State 168\n\l 36 multiFieldsList: fieldsList . SEMICOLON multiFieldsList\l 37                | fieldsList .\l"]
  168 -> 179 [style=solid label="SEMICOLON"]
  168 -> "168R37" [style=solid]
 "168R37" [label="R37", fillcolor=3, shape=diamond, style=filled]
  169 [label="State 169\n\l 34 type: RECORD multiFieldsList . END\l"]
  169 -> 180 [style=solid label="END"]
  170 [label="State 170\n\l 41 basicType: constant DOTDOT . constant\l"]
  170 -> 118 [style=solid label="IDENTIFIER"]
  170 -> 119 [style=solid label="STRING"]
  170 -> 120 [style=solid label="NUMBER"]
  170 -> 54 [style=solid label="PLUS"]
  170 -> 55 [style=solid label="MINUS"]
  170 -> 181 [style=dashed label="constant"]
  170 -> 122 [style=dashed label="sign"]
  171 [label="State 171\n\l 79 expressionList: expr COMMA expressionList .\l"]
  171 -> "171R79" [style=solid]
 "171R79" [label="R79", fillcolor=3, shape=diamond, style=filled]
  172 [label="State 172\n\l 48 statement: FOR assignment TO expr DO . statement\l"]
  172 -> 22 [style=solid label="IDENTIFIER"]
  172 -> 23 [style=solid label="NUMBER"]
  172 -> 12 [style=solid label="BEGINBEGIN"]
  172 -> 24 [style=solid label="FOR"]
  172 -> 25 [style=solid label="GOTO"]
  172 -> 26 [style=solid label="IF"]
  172 -> 27 [style=solid label="REPEAT"]
  172 -> 28 [style=solid label="WHILE"]
  172 -> 29 [style=dashed label="label"]
  172 -> 30 [style=dashed label="block"]
  172 -> 182 [style=dashed label="statement"]
  172 -> 32 [style=dashed label="functionCall"]
  172 -> 33 [style=dashed label="assignment"]
  172 -> 34 [style=dashed label="variable"]
  173 [label="State 173\n\l 56 endif: ELSE . statement\l"]
  173 -> 22 [style=solid label="IDENTIFIER"]
  173 -> 23 [style=solid label="NUMBER"]
  173 -> 12 [style=solid label="BEGINBEGIN"]
  173 -> 24 [style=solid label="FOR"]
  173 -> 25 [style=solid label="GOTO"]
  173 -> 26 [style=solid label="IF"]
  173 -> 27 [style=solid label="REPEAT"]
  173 -> 28 [style=solid label="WHILE"]
  173 -> 29 [style=dashed label="label"]
  173 -> 30 [style=dashed label="block"]
  173 -> 183 [style=dashed label="statement"]
  173 -> 32 [style=dashed label="functionCall"]
  173 -> 33 [style=dashed label="assignment"]
  173 -> 34 [style=dashed label="variable"]
  174 [label="State 174\n\l 45 statement: IF expr THEN statement endif .\l"]
  174 -> "174R45" [style=solid]
 "174R45" [label="R45", fillcolor=3, shape=diamond, style=filled]
  175 [label="State 175\n\l 42 basicType: LPAREN idlist RPAREN .\l"]
  175 -> "175R42" [style=solid]
 "175R42" [label="R42", fillcolor=3, shape=diamond, style=filled]
  176 [label="State 176\n\l 33 type: ARRAY LBRACKET basicList . RBRACKET OF type\l"]
  176 -> 184 [style=solid label="RBRACKET"]
  177 [label="State 177\n\l 38 basicList: basicType . COMMA basicList\l 39          | basicType .\l"]
  177 -> 185 [style=solid label="COMMA"]
  177 -> "177R39" [style=solid]
 "177R39" [label="R39", fillcolor=3, shape=diamond, style=filled]
  178 [label="State 178\n\l 35 fieldsList: idlist COLON . type\l"]
  178 -> 126 [style=solid label="IDENTIFIER"]
  178 -> 119 [style=solid label="STRING"]
  178 -> 120 [style=solid label="NUMBER"]
  178 -> 54 [style=solid label="PLUS"]
  178 -> 55 [style=solid label="MINUS"]
  178 -> 127 [style=solid label="POINT"]
  178 -> 128 [style=solid label="LPAREN"]
  178 -> 129 [style=solid label="ARRAY"]
  178 -> 130 [style=solid label="RECORD"]
  178 -> 131 [style=dashed label="constant"]
  178 -> 186 [style=dashed label="type"]
  178 -> 133 [style=dashed label="basicType"]
  178 -> 122 [style=dashed label="sign"]
  179 [label="State 179\n\l 36 multiFieldsList: fieldsList SEMICOLON . multiFieldsList\l"]
  179 -> 6 [style=solid label="IDENTIFIER"]
  179 -> 167 [style=dashed label="idlist"]
  179 -> 168 [style=dashed label="fieldsList"]
  179 -> 187 [style=dashed label="multiFieldsList"]
  180 [label="State 180\n\l 34 type: RECORD multiFieldsList END .\l"]
  180 -> "180R34" [style=solid]
 "180R34" [label="R34", fillcolor=3, shape=diamond, style=filled]
  181 [label="State 181\n\l 41 basicType: constant DOTDOT constant .\l"]
  181 -> "181R41" [style=solid]
 "181R41" [label="R41", fillcolor=3, shape=diamond, style=filled]
  182 [label="State 182\n\l 48 statement: FOR assignment TO expr DO statement .\l"]
  182 -> "182R48" [style=solid]
 "182R48" [label="R48", fillcolor=3, shape=diamond, style=filled]
  183 [label="State 183\n\l 56 endif: ELSE statement .\l"]
  183 -> "183R56" [style=solid]
 "183R56" [label="R56", fillcolor=3, shape=diamond, style=filled]
  184 [label="State 184\n\l 33 type: ARRAY LBRACKET basicList RBRACKET . OF type\l"]
  184 -> 188 [style=solid label="OF"]
  185 [label="State 185\n\l 38 basicList: basicType COMMA . basicList\l"]
  185 -> 126 [style=solid label="IDENTIFIER"]
  185 -> 119 [style=solid label="STRING"]
  185 -> 120 [style=solid label="NUMBER"]
  185 -> 54 [style=solid label="PLUS"]
  185 -> 55 [style=solid label="MINUS"]
  185 -> 128 [style=solid label="LPAREN"]
  185 -> 131 [style=dashed label="constant"]
  185 -> 189 [style=dashed label="basicList"]
  185 -> 177 [style=dashed label="basicType"]
  185 -> 122 [style=dashed label="sign"]
  186 [label="State 186\n\l 35 fieldsList: idlist COLON type .\l"]
  186 -> "186R35" [style=solid]
 "186R35" [label="R35", fillcolor=3, shape=diamond, style=filled]
  187 [label="State 187\n\l 36 multiFieldsList: fieldsList SEMICOLON multiFieldsList .\l"]
  187 -> "187R36" [style=solid]
 "187R36" [label="R36", fillcolor=3, shape=diamond, style=filled]
  188 [label="State 188\n\l 33 type: ARRAY LBRACKET basicList RBRACKET OF . type\l"]
  188 -> 126 [style=solid label="IDENTIFIER"]
  188 -> 119 [style=solid label="STRING"]
  188 -> 120 [style=solid label="NUMBER"]
  188 -> 54 [style=solid label="PLUS"]
  188 -> 55 [style=solid label="MINUS"]
  188 -> 127 [style=solid label="POINT"]
  188 -> 128 [style=solid label="LPAREN"]
  188 -> 129 [style=solid label="ARRAY"]
  188 -> 130 [style=solid label="RECORD"]
  188 -> 131 [style=dashed label="constant"]
  188 -> 190 [style=dashed label="type"]
  188 -> 133 [style=dashed label="basicType"]
  188 -> 122 [style=dashed label="sign"]
  189 [label="State 189\n\l 38 basicList: basicType COMMA basicList .\l"]
  189 -> "189R38" [style=solid]
 "189R38" [label="R38", fillcolor=3, shape=diamond, style=filled]
  190 [label="State 190\n\l 33 type: ARRAY LBRACKET basicList RBRACKET OF type .\l"]
  190 -> "190R33" [style=solid]
 "190R33" [label="R33", fillcolor=3, shape=diamond, style=filled]
}
