
reducedot
(^ john)didnt print link
post-RD var
(^ john)post-RD dot
(aref (^ john)
      32)
reducedot
(^ john)didnt print link
post-RD var
(^ john)post-RD dot
(aref (^ john)
      0)
reducedot
(^ john)didnt print link
post-RD var
(^ john)post-RD dot
(aref (^ john)
      8)
reducedot
(^ john)didnt print link
post-RD var
(^ john)post-RD dot
(aref (^ john)
      40)
reducedot
(^ john)didnt print link
post-RD var
(^ john)post-RD dot
(aref (^ john)
      16)
reducedot
(aref (^ john)
      16)didnt print link
post-RD var
(aref (^ john)
      16)post-RD dot
(aref (^ john)
      16)
reducedot
(^ mary)didnt print link
post-RD var
(^ mary)post-RD dot
(aref (^ mary)
      0)
reducedot
(^ mary)didnt print link
post-RD var
(^ mary)post-RD dot
(aref (^ mary)
      8)
reducedot
(^ fred)didnt print link
post-RD var
(^ fred)post-RD dot
(aref (^ fred)
      0)
reducedot
(^ fred)didnt print link
post-RD var
(^ fred)post-RD dot
(aref (^ fred)
      8)
reducedot
(^ john)didnt print link
post-RD var
(^ john)post-RD dot
(aref (^ john)
      8)
reducedot
(^ (aref (^ john)
         8))didnt print link
post-RD var
(^ (aref (^ john)
         8))post-RD dot
(aref (^ (aref (^ john)
               8))
      8)
reducedot
(^ (aref (^ (aref (^ john)
                  8))
         8))didnt print link
post-RD var
(^ (aref (^ (aref (^ john)
                  8))
         8))post-RD dot
(aref (^ (aref (^ (aref (^ john)
                        8))
               8))
      16)
reducedot
(aref (^ (aref (^ (aref (^ john)
                        8))
               8))
      16)didnt print link
post-RD var
(aref (^ (aref (^ (aref (^ john)
                        8))
               8))
      24)post-RD dot
(aref (^ (aref (^ (aref (^ john)
                        8))
               8))
      24)arrayref
 token 94389529025408  ID            ac  dtype  0  link 0
 token 94389529025536  NUM            7  dtype  0  link 0
Subs
 7subs->intval: 7
arr already has a linked offset
return from arrayref
(aref ac (+ -16
            (* 16
               7)))
retTok->link->tokenType: 5


reducedot
(aref ac (+ -16
            (* 16
               7)))
var->link->tokenType: 5

didnt print link
var already has a linked offset
var->link->tokentype: 5
numerical offset
post-RD var
(aref ac 96)post-RD dot
(aref ac 96)
reducedot
(^ john)didnt print link
post-RD var
(^ john)post-RD dot
(aref (^ john)
      40)
reducedot
(^ ptr)didnt print link
post-RD var
(^ ptr)post-RD dot
(aref (^ ptr)
      0)arrayref
 token 94389529028800  ID        people  dtype  0  link 0
 token 94389529028928  ID             i  dtype  0  link 0
Subs
 iarr already has a linked offset
identifier case
i
return from arrayref
(aref people (+ -48
                (* 48
                   i)))
retTok->link->tokenType: 3


reducedot
(aref people (+ -48
                (* 48
                   i)))
var->link->tokenType: 3

didnt print link
var already has a linked offset
var->link->tokentype: 3
identifier offset
post-RD var
(aref people (+ i)
             0)post-RD dot
(aref people (+ i)
             0)
reducedot
(^ ptr)didnt print link
post-RD var
(^ ptr)post-RD dot
(aref (^ ptr)
      0)arrayref
 token 94389529030272  ID           aco  dtype  0  link 0
 token 94389529030400  ID             i  dtype  0  link 94389529030528
arrayref
 token 94389529030976  OP          aref  dtype  0  link 0  operands 94389529030272
 token 94389529030528  NUM            1  dtype  0  link 0
Subs
 1subs->intval: 1
return from arrayref
(aref aco (+ -12
             (* 12
                1)))
retTok->link->tokenType: 5


reducedot
(^ john)didnt print link
post-RD var
(^ john)post-RD dot
(aref (^ john)
      32)
reducedot
(^ ptr)didnt print link
post-RD var
(^ ptr)post-RD dot
(aref (^ ptr)
      8)
reducedot
(^ fred)didnt print link
post-RD var
(^ fred)post-RD dot
(aref (^ fred)
      16)
reducedot
(aref (^ fred)
      16)didnt print link
post-RD var
(aref (^ fred)
      24)post-RD dot
(aref (^ fred)
      24)yyparse result =        0
Symbol table level 1
 94389528998288     complex  TYPE   typ 94389528998000  lvl  1  siz    16  off     0
(RECORD (re real)
        (im real))
 94389528999152         red  CONST  typ INTEGER  val  0
 94389528999312       white  CONST  typ INTEGER  val  1
 94389528999472        blue  CONST  typ INTEGER  val  2
 94389528999664       color  TYPE   typ 94389528999568  lvl  1  siz     4  off     0
  0 ..   2
 94389529000080      person  TYPE   typ 94389529001904  lvl  1  siz    48  off     0
(RECORD (age integer)
        (friend (^ person))
        (location (RECORD (re real)
                          (im real)))
        (favorite   0 ..   2)
        (salary real))
 94389529000272          pp  TYPE   typ 94389529000176  lvl  1  siz     8  off     0
(^ person)
 94389529002992           c  VAR    0 typ 94389528998000  lvl  1  siz    16  off     0
(RECORD (re real)
        (im real))
 94389529003088           d  VAR    0 typ 94389528998000  lvl  1  siz    16  off    16
(RECORD (re real)
        (im real))
 94389529003568           i  VAR    0 typ integer  lvl  1  siz     4  off    32
 94389529003664         sum  VAR    0 typ integer  lvl  1  siz     4  off    36
 94389529004656          ac  VAR    0 typ 94389529004560  lvl  1  siz   160  off    48
(ARRAY   1 ..  10 (RECORD (re real)
                          (im real)))
 94389529005872         aco  VAR    0 typ 94389529005776  lvl  1  siz   120  off   208
(ARRAY   1 ..  10 (ARRAY   0 ..   2   0 ..   2))
 94389529006608        john  VAR    4 typ 94389529000176  lvl  1  siz     8  off   328
(^ person)
 94389529006704        mary  VAR    4 typ 94389529000176  lvl  1  siz     8  off   336
(^ person)
 94389529006800        fred  VAR    4 typ 94389529000176  lvl  1  siz     8  off   344
(^ person)
 94389529006896         ptr  VAR    4 typ 94389529000176  lvl  1  siz     8  off   352
(^ person)
 94389529007888      people  VAR    0 typ 94389529007792  lvl  1  siz   960  off   368
(ARRAY   1 ..  20 (RECORD (age integer)
                          (friend (^ person))
                          (location (RECORD (re real)
                                            (im real)))
                          (favorite   0 ..   2)
                          (salary real)))
(program graph1 (progn output)
                (progn (:= john (funcall new 48))
                       (:= mary (funcall new 48))
                       (:= fred (funcall new 48))
                       (:= (aref (^ john)
                                 32)
                           2)
                       (:= (aref (^ john)
                                 0)
                           19)
                       (progn (label 1)
                              (:= (aref (^ john)
                                        8)
                                  mary))
                       (:= (aref (^ john)
                                 40)
                           4.000000e+04)
                       (:= (aref (^ john)
                                 16)
                           3.000000e+00)
                       (:= (aref (^ mary)
                                 0)
                           21)
                       (:= (aref (^ mary)
                                 8)
                           fred)
                       (progn (label 0)
                              (:= (aref (^ fred)
                                        0)
                                  20))
                       (:= (aref (^ fred)
                                 8)
                           0)
                       (:= (aref (^ (aref (^ (aref (^ john)
                                                   8))
                                          8))
                                 24)
                           4.500000e+00)
                       (:= (aref ac 96)
                           (aref (^ john)
                                 40))
                       (:= ptr john)
                       (:= sum 0)
                       (:= i 1)
                       (progn (label 2)
                              (if (<> ptr 0)
                                  (progn (progn (:= sum (+ sum (aref (^ ptr)
                                                                     0)))
                                                (:= (aref people (+ i)
                                                                 0)
                                                    (aref (^ ptr)
                                                          0))
                                                (:= (aref aco (+ -12
                                                                 (* 12
                                                                    1)))
                                                    (aref (^ john)
                                                          32))
                                                (:= ptr (aref (^ ptr)
                                                              8))
                                                (:= i (+ i 1)))
                                         (goto 2))))
                       (funcall write 'i = ')
                       (funcall writeln i)
                       (funcall write 'Sum of ages = ')
                       (funcall writeln sum)
                       (funcall write 'Fred loc im = ')
                       (funcall writeln (aref (^ fred)
                                              24))
                       (if (< sum 3)
                           (goto 0))))